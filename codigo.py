    

# -*- coding: utf-8 -*-

import streamlit as st
import pandas as pd
import numpy as np
import io, csv, unicodedata, re
import os
import glob
from typing import Optional, Tuple, List, Dict

st.set_page_config(page_title="Observat√≥rio ‚Äî CSV (fix)", layout="wide")

# ---------------- Utilidades ----------------
def _strip_accents(s: str) -> str:
    if not isinstance(s, str):
        return s
    return ''.join(ch for ch in unicodedata.normalize('NFKD', s) if not unicodedata.combining(ch))

def normalize_name(c: str) -> str:
    c0 = _strip_accents(str(c).strip()).lower()
    c0 = re.sub(r'[^0-9a-z]+', '_', c0)
    c0 = re.sub(r'_+', '_', c0).strip('_')
    return c0

def normalize_headers(df: pd.DataFrame) -> pd.DataFrame:
    df = df.copy()
    df.columns = [normalize_name(c) for c in df.columns]
    return df

def ensure_unique_columns(df: pd.DataFrame) -> pd.DataFrame:
    """Remove colunas duplicadas mantendo a primeira ocorr√™ncia."""
    dup = df.columns.duplicated()
    return df.loc[:, ~dup].copy()

def sniff_delimiter(sample_bytes: bytes) -> Optional[str]:
    try:
        # Tenta detectar o dialeto do CSV
        dialect = csv.Sniffer().sniff(sample_bytes.decode("latin1", errors="ignore"))
        return dialect.delimiter
    except Exception:
        return None

def _read_bytes(src) -> bytes:
    if hasattr(src, "read"):
        return src.read()
    elif isinstance(src, (bytes, bytearray)):
        return bytes(src)
    else:
        with open(src, "rb") as f:
            return f.read()

ENCODINGS_BR = ["latin1", "utf-8-sig", "utf-8", "cp1252"]

@st.cache_data(show_spinner=False)
def load_csv_simple(src,
                    sep_opt: Optional[str] = None,
                    decimal_opt: str = ",",
                    skiprows: int = 0,
                    encodings: List[str] = ENCODINGS_BR) -> Tuple[pd.DataFrame, str, str]:
    raw = _read_bytes(src)
    seps = [sep_opt] if sep_opt else []
    
    # Tenta farejar o delimitador
    auto = sniff_delimiter(raw[:65536])
    if auto and auto not in seps: seps.append(auto)
    
    # Adiciona delimitadores comuns
    for s in [";", ",", "\t", "|"]:
        if s not in seps:
            seps.append(s)
    
    # Remove duplicados e None
    seps = [s for s in seps if s is not None]
    seps = list(dict.fromkeys(seps)) # Remove duplicados mantendo a ordem

    last_err = None
    for enc in encodings:
        for sep in seps:
            try:
                bio = io.BytesIO(raw)
                df = pd.read_csv(
                    bio, sep=sep, engine="python", encoding=enc,
                    on_bad_lines="skip", quotechar='"', escapechar="\\",
                    skiprows=skiprows, decimal=decimal_opt
                )
                if df.shape[1] >= 1:
                    return df, enc, sep
            except Exception as e:
                last_err = e
                continue
    raise RuntimeError(f"Falha ao ler o CSV. √öltimo erro: {last_err}")

def ensure_datetime(df: pd.DataFrame, col: Optional[str]) -> Optional[str]:
    if not col or col not in df.columns:
        return None
    try:
        # Tenta formato brasileiro (dia primeiro)
        df[col] = pd.to_datetime(df[col], errors="coerce", dayfirst=True)
    except Exception:
        # Tenta formato padr√£o
        df[col] = pd.to_datetime(df[col], errors="coerce")
    return col

# ---- Fun√ß√£o para carregar m√∫ltiplos CSVs ----
@st.cache_data(show_spinner=False)
def load_all_csvs_from_folder(folder_path: str, 
                            sep_opt: Optional[str] = None,
                            decimal_opt: str = ",",
                            skiprows: int = 0,
                            encodings: List[str] = ENCODINGS_BR) -> pd.DataFrame:
    """
    Carrega todos os arquivos CSV de uma pasta e concatena em um √∫nico DataFrame
    """
    # Encontrar todos os arquivos CSV na pasta
    csv_pattern = os.path.join(folder_path, "*.csv")
    csv_files = glob.glob(csv_pattern)
    
    if not csv_files:
        raise FileNotFoundError(f"Nenhum arquivo CSV encontrado em: {folder_path}")
    
    st.info(f"Encontrados {len(csv_files)} arquivos CSV na pasta")
    
    all_dfs = []
    file_info = []
    
    for i, csv_file in enumerate(csv_files):
        try:
            st.write(f"üìÅ Carregando: {os.path.basename(csv_file)}")
            df_temp, enc_used, sep_used = load_csv_simple(
                csv_file, sep_opt=sep_opt, decimal_opt=decimal_opt,
                skiprows=skiprows, encodings=encodings
            )
            
            # Adicionar coluna com nome do arquivo de origem
            df_temp['arquivo_origem'] = os.path.basename(csv_file)
            
            all_dfs.append(df_temp)
            file_info.append({
                'arquivo': os.path.basename(csv_file),
                'linhas': len(df_temp),
                'colunas': len(df_temp.columns),
                'encoding': enc_used,
                'separador': sep_used
            })
            
        except Exception as e:
            st.warning(f"‚ö†Ô∏è Erro ao carregar {csv_file}: {str(e)}")
            continue
    
    if not all_dfs:
        raise RuntimeError("Nenhum arquivo CSV p√¥de ser carregado com sucesso")
    
    # Concatenar todos os DataFrames
    final_df = pd.concat(all_dfs, ignore_index=True)
    
    # Mostrar informa√ß√µes dos arquivos carregados
    st.success(f"‚úÖ Carregados {len(all_dfs)} arquivos com {len(final_df):,} registros no total")
    
    # Tabela de informa√ß√µes dos arquivos
    info_df = pd.DataFrame(file_info)
    with st.expander("üìä Informa√ß√µes dos arquivos carregados"):
        st.dataframe(info_df, use_container_width=True)
    
    return final_df

# ---- fallback de gradient (se n√£o houver matplotlib) ----
def style_heatmap(df: pd.DataFrame, cmap: str = "Blues"):
    try:
        import matplotlib  # noqa
        return df.style.background_gradient(cmap=cmap)
    except Exception:
        return df

# --------------- Mapeamentos ---------------
UF_MAPPING = {
    "Rio de Janeiro": "RJ", "Mato Grosso": "MT", "Santa Catarina": "SC", "S√£o Paulo": "SP",
    "Distrito Federal": "DF", "Zerado": "Zerado", "Pernambuco": "PE", "Mato Grosso do Sul": "MS",
    "Amazonas": "AM", "Paran√°": "PR", "Parana": "PR", "PARAN√Å": "PR", "PARANA": "PR",
    "Cear√°": "CE", "Ceara": "CE", "Minas Gerais": "MG", 
    "Rio Grande do Sul": "RS", "Bahia": "BA", "Alagoas": "AL", "Par√°": "PA", "Para": "PA",
    "Esp√≠rito Santo": "ES", "Espirito Santo": "ES", "Tocantins": "TO", "Para√≠ba": "PB", "Paraiba": "PB",
    "Sergipe": "SE", "Piau√≠": "PI", "Piaui": "PI", "Rio Grande do Norte": "RN", "Maranh√£o": "MA", 
    "Maranhao": "MA", "Goi√°s": "GO", "Goias": "GO", "Rond√¥nia": "RO", "Rondonia": "RO", 
    "Amap√°": "AP", "Amapa": "AP", "Roraima": "RR", "Acre": "AC",
    # Adicionar varia√ß√µes comuns
    "S√£o Paulo": "SP", "Sao Paulo": "SP", "SANTA CATARINA": "SC", "RIO DE JANEIRO": "RJ",
    "RIO GRANDE DO SUL": "RS", "MINAS GERAIS": "MG", "BAHIA": "BA", "CEAR√Å": "CE", "CEARA": "CE",
    "PAR√Å": "PA", "PARA": "PA", "ESP√çRITO SANTO": "ES", "ESPIRITO SANTO": "ES", "GOI√ÅS": "GO",
    "GOIAS": "GO", "MARANH√ÉO": "MA", "MARANHAO": "MA", "PIAU√ç": "PI", "PIAUI": "PI",
    "PARA√çBA": "PB", "PARAIBA": "PB", "ROND√îNIA": "RO", "RONDONIA": "RO", "AMAP√Å": "AP",
    "AMAPA": "AP", "ACRE": "AC", "ALAGOAS": "AL", "SERGIPE": "SE", "TOCANTINS": "TO",
    "RIO GRANDE DO NORTE": "RN", "MATO GROSSO": "MT", "MATO GROSSO DO SUL": "MS",
    "DISTRITO FEDERAL": "DF", "PERNAMBUCO": "PE"
}

def create_municipio_mapping_file():
    """Cria o arquivo de mapeamento de munic√≠pios"""
    mapping_data = """000000-Ignorado	Ignorado
110002-Ariquemes	Ariquemes
110003-Cabixi	Cabixi
110004-Cacoal	Cacoal
110005-Cerejeiras	Cerejeiras
110006-Colorado do O	Colorado do Oeste
110007-Corumbiara	Corumbiara
110009-Espig√£o D'Oes	Espig√£o d'Oeste
110011-Jaru	Jaru
110012-Ji-Paran√°	Ji Paran√°
110013-Machadinho D'	Machadinho d'Oeste
110015-Ouro Preto do	Ouro Preto do Oeste
110018-Pimenta Bueno	Pimenta Bueno
110020-Porto Velho	Porto Velho
110025-Presidente M√©	Presidente M√©dici
110028-Rolim de Mour	Rolim de Moura
110030-Vilhena	Vilhena
110032-S√£o Miguel do	S√£o Miguel do Araguaia
110033-Nova Mamor√©	Nova Mamor√©
110034-Alvorada D'Oe	Alvorada d'Oeste
110045-Buritis-Ro	Buritis Ro
110080-Candeias do J	Candeias do Jamari
110092-Chupinguaia	Chupinguaia
110130-Mirante da Se	Mirante da Serra
110140-Monte Negro	Monte Negro
110143-Nova Uni√£o-Ro	Nova Uni√£o Ro
110145-Parecis	Parecis
110150-Seringueiras	Seringueiras
110170-Urup√°	Urup√°
110175-Vale do Anari	Vale do Anari
110180-Vale do Para√≠	Vale do Para√≠so
120010-Brasil√©ia	Brasil√©ia
120020-Cruzeiro do S	Cruzeiro do Sul
120025-Epitaciol√¢ndi	Epitaciol√¢ndi
120040-Rio Branco-Ac	Rio Branco Ac
120045-Senador Guiom	Senador Guiomard
120050-Sena Madureir	Sena Madureira
120060-Tarauac√°	Tarauac√°
120070-Xapuri	Xapuri
130014-Apu√≠	Apu√≠
130030-Autazes	Autazes
130040-Barcelos	Barcelos
130120-Coari	Coari
130170-Humait√°-Am	Humait√° Am
130185-Iranduba	Iranduba
130190-Itacoatiara	Itacoatiara
130250-Manacapuru	Manacapuru
130260-Manaus	Manaus
130300-Nhamund√°	Nhamund√°
130330-Novo Aripuan√£	Novo Aripuan√£
130340-Parintins	Parintins
130353-Presidente Fi	Presidente Figueiredo
130356-Rio Preto da	Rio Preto da
140010-Boa Vista-Rr	Boa Vista Rr
140017-Cant√°	Cant√°
140020-Caracara√≠	Caracara√≠
140050-S√£o Jo√£o da B	S√£o Jo√£o da B
150010-Abaetetuba	Abaetetuba
150020-Acar√°	Acar√°
150034-√Ågua Azul do	√Ågua Azul do Norte
150040-Alenquer	Alenquer
150060-Altamira	Altamira
150080-Ananindeua	Ananindeua
150100-Aveiro	Aveiro
150125-Bannach	Bannach
150130-Barcarena	Barcarena
150140-Bel√©m-Pa	Bel√©m Pa
150145-Belterra	Belterra
150150-Benevides	Benevides
150170-Bragan√ßa	Bragan√ßa
150172-Brasil Novo	Brasil Novo
150180-Breves	Breves
150215-Cana√£ dos Car	Cana√£ dos Caraj√°s
150220-Capanema-Pa	Capanema Pa
150230-Capit√£o Po√ßo	Capit√£o Po√ßo
150240-Castanhal	Castanhal
150260-Colares	Colares
150270-Concei√ß√£o do	Concei√ß√£o do Araguaia
150275-Conc√≥rdia do	Conc√≥rdia do Par√°
150276-Cumaru do Nor	Cumaru do Norte
150277-Curion√≥polis	Curion√≥polis
150290-Curu√ß√°	Curu√ß√°
150293-Dom Eliseu	Dom Eliseu
150345-Ipixuna do Pa	Ipixuna do Pa
150360-Itaituba	Itaituba
150375-Jacareacanga	Jacareacanga
150390-Juruti	Juruti
150420-Marab√°	Marab√°
150430-Maracan√£	Maracan√£
150442-Marituba	Marituba
150470-Moju	Moju
150480-Monte Alegre-	Monte Alegre
150495-Nova Esperan√ß	Nova Esperan√ß
150503-Novo Progress	Novo Progresso
150510-√ìbidos	√ìbidos
150530-Oriximin√°	Oriximin√°
150543-Ouril√¢ndia do	Ouril√¢ndia do
150550-Paragominas	Paragominas
150553-Parauapebas	Parauapebas
150563-Pi√ßarra	Pi√ßarra
150613-Reden√ß√£o-Pa	Reden√ß√£o Pa
150616-Rio Maria	Rio Maria
150618-Rondon do Par	Rondon do Par√°
150619-Rur√≥polis	Rur√≥polis
150620-Salin√≥polis	Salin√≥polis
150630-Salvaterra	Salvaterra
150650-Santa Isabel	Santa Isabel
150658-Santa Maria d	Santa Maria da Vit√≥ria
150660-Santa Maria d	Santa Maria da Vit√≥ria
150670-Santana do Ar	Santana do Araguaia
150680-Santar√©m-Pa	Santar√©m Pa
150700-Santo Ant√¥nio	Santo Ant√¥nio de Jesus
150715-S√£o Domingos	S√£o Domingos
150720-S√£o Domingos	S√£o Domingos
150730-S√£o F√©lix do	S√£o F√©lix do Xingu
150745-S√£o Geraldo d	S√£o Geraldo do Araguaia
150750-S√£o Jo√£o do A	S√£o Jo√£o do A
150760-S√£o Miguel do	S√£o Miguel do Araguaia
150795-Tail√¢ndia	Tail√¢ndia
150800-Tom√©-A√ßu	Tom√© A√ßu
150803-Tracuateua	Tracuateua
150808-Tucum√£	Tucum√£
150810-Tucuru√≠	Tucuru√≠
150812-Ulian√≥polis	Ulian√≥polis
150815-Uruar√°	Uruar√°
150820-Vigia	Vigia
150830-Viseu	Viseu
150840-Xinguara	Xinguara
160020-Cal√ßoene	Cal√ßoene
160030-Macap√°	Macap√°
160040-Mazag√£o	Mazag√£o
160050-Oiapoque	Oiapoque
160060-Santana-Ap	Santana Ap
170030-Aguiarn√≥polis	Aguiarn√≥polis
170070-Alvorada-To	Alvorada To
170210-Aragua√≠na	Aragua√≠na
170220-Araguatins	Araguatins
170240-Arraias	Arraias
170255-Augustin√≥poli	Augustin√≥polis
170300-Baba√ßul√¢ndia	Baba√ßul√¢ndia
170320-Bernardo Say√£	Bernardo Say√£
170386-Cariri do Toc	Cariri do Toc
170550-Colinas do To	Colinas do Tocantins
170650-Darcin√≥polis	Darcin√≥polis
170700-Dian√≥polis	Dian√≥polis
170710-Divin√≥polis d	Divin√≥polis D
170755-F√°tima-To	F√°tima To
170820-Formoso do Ar	Formoso do Araguaia
170930-Guara√≠	Guara√≠
170950-Gurupi	Gurupi
171190-Lagoa da Conf	Lagoa da Confus√£o
171245-Luzin√≥polis	Luzin√≥polis
171320-Miracema do T	Miracema do Tocantins
171420-Natividade-To	Natividade To
171488-Nova Olinda-T	Nova Olinda T
171510-Novo Acordo	Novo Acordo
171610-Para√≠so do To	Para√≠so do Tocantins
171820-Porto Naciona	Porto Nacional
171850-Recursol√¢ndia	Recursol√¢ndia
171855-Riachinho-To	Riachinho To
172090-Taguatinga	Taguatinga
172100-Palmas-To	Palmas To
172120-Tocantin√≥poli	Tocantin√≥polis
172210-Xambio√°	Xambio√°
210005-A√ßail√¢ndia	A√ßail√¢ndia
210030-Aldeias Altas	Aldeias Altas
210100-Arari	Arari
210120-Bacabal	Bacabal
210125-Bacabeira	Bacabeira
210140-Balsas	Balsas
210150-Bar√£o de Graj	Bar√£o de Graj
210160-Barra do Cord	Barra do Cord
210170-Barreirinhas	Barreirinhas
210230-Buriti Bravo	Buriti Bravo
210280-Carolina	Carolina
210300-Caxias	Caxias
210320-Chapadinha	Chapadinha
210330-Cod√≥	Cod√≥
210340-Coelho Neto	Coelho Neto
210350-Colinas-Ma	Colinas Ma
210410-Fortaleza dos	Fortaleza dos Nogueiras
210455-Governador Ed	Governador Edison Lob√£o
210480-Graja√∫	Graja√∫
210515-Igarap√© do Me	Igarap√© do Me
210530-Imperatriz	Imperatriz
210540-Itapecuru Mir	Itapecuru Mirim
210542-Itinga do Mar	Itinga do Mar
210570-Lago da Pedra	Lago da Pedra
210610-Loreto	Loreto
210750-Pa√ßo do Lumia	Pa√ßo do Lumiar
210770-Paraibano	Paraibano
210845-Peritor√≥	Peritor√≥
210900-Porto Franco	Porto Franco
210910-Presidente Du	Presidente Du
210950-Riach√£o-Ma	Riach√£o Ma
210990-Santa In√™s-Ma	Santa In√™s Ma
211000-Santa Luzia-M	Santa Luzia M
211030-Santo Ant√¥nio	Santo Ant√¥nio de Jesus
211050-S√£o Bento-Ma	S√£o Bento Ma
211120-S√£o Jos√© de R	S√£o Jos√© do Rio Pardo
211130-S√£o Lu√≠s	S√£o Lu√≠s
211150-S√£o Mateus do	S√£o Mateus do Sul
211160-S√£o Raimundo	S√£o Raimundo
211200-Tasso Fragoso	Tasso Fragoso
211210-Timbiras	Timbiras
211220-Timon	Timon
211230-Tuntum	Tuntum
220020-√Ågua Branca-P	√Ågua Branca P
220040-Altos	Altos
220140-Barro Duro	Barro Duro
220190-Bom Jesus-Pi	Bom Jesus Pi
220208-Cajueiro da P	Cajueiro da Praia
220220-Campo Maior	Campo Maior
220230-Canto do Buri	Canto do Buriti
220290-Corrente	Corrente
220330-Demerval Lob√£	Demerval Lob√£o
220390-Floriano	Floriano
220450-Guadalupe	Guadalupe
220530-Jerumenha	Jerumenha
220557-Lagoa de S√£o	Lagoa de S√£o
220570-Lu√≠s Correia	Lu√≠s Correia
220620-Miguel Alves	Miguel Alves
220700-Oeiras	Oeiras
220770-Parna√≠ba	Parna√≠ba
220800-Picos	Picos
220840-Piripiri	Piripiri
221060-S√£o Raimundo	S√£o Raimundo
221100-Teresina	Teresina
221110-Uni√£o	Uni√£o
221120-Uru√ßu√≠	Uru√ßu√≠
221130-Valen√ßa do Pi	Valen√ßa do Pi
230020-Acara√∫	Acara√∫
230030-Acopiara	Acopiara
230075-Amontada	Amontada
230100-Aquiraz	Aquiraz
230110-Aracati	Aracati
230190-Barbalha	Barbalha
230210-Baturit√©	Baturit√©
230220-Beberibe	Beberibe
230240-Boa Viagem	Boa Viagem
230250-Brejo Santo	Brejo Santo
230260-Camocim	Camocim
230280-Canind√©	Canind√©
230320-Cariria√ßu	Cariria√ßu
230350-Cascavel-Ce	Cascavel Ce
230370-Caucaia	Caucaia
230395-Chorozinho	Chorozinho
230410-Crate√∫s	Crate√∫s
230420-Crato	Crato
230428-Eus√©bio	Eus√©bio
230435-Forquilha	Forquilha
230440-Fortaleza	Fortaleza
230470-Granja	Granja
230495-Guai√∫ba	Guai√∫ba
230500-Guaraciaba do	Guaraciaba do
230523-Horizonte	Horizonte
230535-Icapu√≠	Icapu√≠
230540-Ic√≥	Ic√≥
230550-Iguatu-Ce	Iguatu Ce
230570-Ipaumirim	Ipaumirim
230610-Irau√ßuba	Irau√ßuba
230620-Itai√ßaba	Itai√ßaba
230625-Itaitinga	Itaitinga
230630-Itapag√©	Itapag√©
230640-Itapipoca	Itapipoca
230690-Jaguaribe	Jaguaribe
230725-Jijoca de Jer	Jijoca de Jer
230730-Juazeiro do N	Juazeiro do Norte
230740-Juc√°s	Juc√°s
230760-Limoeiro do N	Limoeiro do Norte
230765-Maracana√∫	Maracana√∫
230770-Maranguape	Maranguape
230780-Marco	Marco
230800-Massap√™	Massap√™
230810-Mauriti	Mauriti
230830-Milagres-Ce	Milagres Ce
230840-Miss√£o Velha	Miss√£o Velha
230850-Momba√ßa	Momba√ßa
230870-Morada Nova	Morada Nova
230960-Pacajus	Pacajus
230970-Pacatuba-Ce	Pacatuba Ce
230990-Pacuj√°	Pacuj√°
231000-Palhano	Palhano
231020-Paracuru	Paracuru
231025-Paraipaba	Paraipaba
231080-Pereiro	Pereiro
231130-Quixad√°	Quixad√°
231140-Quixeramobim	Quixeramobim
231150-Quixer√©	Quixer√©
231160-Reden√ß√£o-Ce	Reden√ß√£o Ce
231180-Russas	Russas
231220-Santa Quit√©ri	Santa Quit√©ri
231230-S√£o Benedito	S√£o Benedito
231240-S√£o Gon√ßalo d	S√£o Gon√ßalo do Sapuca√≠
231270-Senador Pompe	Senador Pompeu
231290-Sobral	Sobral
231330-Tau√°	Tau√°
231340-Tiangu√°	Tiangu√°
231350-Trairi	Trairi
231380-Uruburetama	Uruburetama
231390-Uruoca	Uruoca
231400-V√°rzea Alegre	V√°rzea Alegre
231410-Vi√ßosa do Cea	Vi√ßosa do Cea
240020-A√ßu	A√ßu
240030-Afonso Bezerr	Afonso Bezerra
240080-Angicos	Angicos
240100-Apodi	Apodi
240110-Areia Branca-	Areia Branca
240120-Ar√™s	Ar√™s
240140-Ba√≠a Formosa	Ba√≠a Formosa
240145-Bara√∫na-Rn	Bara√∫na Rn
240170-Bom Jesus-Rn	Bom Jesus Rn
240230-Cara√∫bas-Rn	Cara√∫bas Rn
240260-Cear√°-Mirim	Cear√° Mirim
240270-Cerro Cor√°	Cerro Cor√°
240310-Currais Novos	Currais Novos
240325-Parnamirim-Rn	Parnamirim Rn
240380-Flor√¢nia	Flor√¢nia
240410-Galinhos	Galinhos
240420-Goianinha	Goianinha
240430-Governador Di	Governador Di
240440-Grossos	Grossos
240450-Guamar√©	Guamar√©
240530-Janu√°rio Cicc	Janu√°rio Cicc
240610-Jucurutu	Jucurutu
240710-Maca√≠ba	Maca√≠ba
240725-Major Sales	Major Sales
240780-Monte Alegre-	Monte Alegre
240800-Mossor√≥	Mossor√≥
240810-Natal	Natal
240830-Nova Cruz	Nova Cruz
240890-Parelhas	Parelhas
240940-Pau dos Ferro	Pau dos Ferro
241030-Presidente Ju	Presidente Prudente
241160-S√£o Bento do	S√£o Bento do Sul
241200-S√£o Gon√ßalo d	S√£o Gon√ßalo do Sapuca√≠
241220-S√£o Jos√© de M	S√£o Jos√© de Mipibu
241240-S√£o Jos√© do S	S√£o Jos√© do Sabugi
241250-S√£o Miguel	S√£o Miguel
241260-S√£o Paulo do	S√£o Paulo do Potengi
241310-Senador El√≥i	Senador El√≥i
241340-Serra Negra d	Serra Negra do Norte
241400-Tangar√°-Rn	Tangar√° Rn
241420-Tibau do Sul	Tibau do Sul
241440-Touros	Touros
241460-Upanema	Upanema
250110-Areia	Areia
250120-Areial	Areial
250180-Bayeux	Bayeux
250215-Boa Vista-Pb	Boa Vista Pb
250300-Caapor√£	Caapor√£
250320-Cabedelo	Cabedelo
250370-Cajazeiras	Cajazeiras
250400-Campina Grand	Campina Grande
250430-Catol√© do Roc	Catol√© do Rocha
250460-Conde-Pb	Conde Pb
250580-Duas Estradas	Duas Estradas
250600-Esperan√ßa	Esperan√ßa
250630-Guarabira	Guarabira
250680-Ing√°	Ing√°
250700-Itaporanga-Pb	Itaporanga Pb
250750-Jo√£o Pessoa	Jo√£o Pessoa
250830-Lagoa Seca	Lagoa Seca
250860-Lucena	Lucena
250890-Mamanguape	Mamanguape
250920-Massaranduba-	Massaranduba
250970-Monteiro	Monteiro
251080-Patos	Patos
251090-Paulista-Pb	Paulista Pb
251120-Pedras de Fog	Pedras de Fogo
251150-Pilar-Pb	Pilar Pb
251200-Pocinhos	Pocinhos
251230-Princesa Isab	Princesa Isabel
251240-Puxinan√£	Puxinan√£
251250-Queimadas-Pb	Queimadas Pb
251290-Rio Tinto	Rio Tinto
251370-Santa Rita-Pb	Santa Rita Pb
251390-S√£o Bento-Pb	S√£o Bento Pb
251400-S√£o Jo√£o do C	S√£o Jo√£o do C
251450-S√£o Jos√© de P	S√£o Jos√© de P
251500-S√£o Miguel de	S√£o Miguel do Guam√°
251610-Soledade-Pb	Soledade Pb
251620-Sousa	Sousa
251630-Sum√©	Sum√©
260005-Abreu e Lima	Abreu e Lima
260010-Afogados da I	Afogados da Ingazeira
260040-√Ågua Preta	√Ågua Preta
260070-Alian√ßa	Alian√ßa
260110-Araripina	Araripina
260120-Arcoverde	Arcoverde
260140-Barreiros	Barreiros
260170-Belo Jardim	Belo Jardim
260190-Bezerros	Bezerros
260230-Bonito-Pe	Bonito Pe
260250-Brejinho-Pe	Brejinho Pe
260280-Bu√≠que	Bu√≠que
260290-Cabo de Santo	Cabo de Santo Agostinho
260345-Camaragibe	Camaragibe
260360-Camutanga	Camutanga
260370-Canhotinho	Canhotinho
260400-Carpina	Carpina
260410-Caruaru	Caruaru
260500-Cupira	Cupira
260510-Cust√≥dia	Cust√≥dia
260520-Escada	Escada
260540-Feira Nova-Pe	Feira Nova Pe
260570-Floresta-Pe	Floresta Pe
260600-Garanhuns	Garanhuns
260610-Gl√≥ria do Goi	Gl√≥ria do Goit√°
260620-Goiana	Goiana
260640-Gravat√°	Gravat√°
260680-Igarassu	Igarassu
260690-Iguaraci	Iguaraci
260720-Ipojuca	Ipojuca
260730-Ipubi	Ipubi
260775-Itapissuma	Itapissuma
260790-Jaboat√£o dos	Jaboat√£o dos Guararapes
260800-Jata√∫ba	Jata√∫ba
260840-Jurema-Pe	Jurema Pe
260850-Lagoa do Itae	Lagoa do Itaenga
260875-Lagoa Grande-	Lagoa Grande
260890-Limoeiro	Limoeiro
260940-Moreno	Moreno
260950-Nazar√© da Mat	Nazar√© da Mata
260960-Olinda	Olinda
260990-Ouricuri	Ouricuri
261000-Palmares	Palmares
261050-Passira	Passira
261060-Paudalho	Paudalho
261070-Paulista-Pe	Paulista Pe
261090-Pesqueira	Pesqueira
261110-Petrolina	Petrolina
261130-Pombos	Pombos
261140-Primavera-Pe	Primavera Pe
261160-Recife	Recife
261170-Riacho das Al	Riacho das Almas
261180-Ribeir√£o	Ribeir√£o
261190-Rio Formoso	Rio Formoso
261220-Salgueiro	Salgueiro
261250-Santa Cruz do	Santa Cruz do Sul
261260-Santa Maria d	Santa Maria da Vit√≥ria
261300-S√£o Bento do	S√£o Bento do Sul
261310-S√£o Caitano	S√£o Caetano
261340-S√£o Jos√© da C	S√£o Jos√© da C
261350-S√£o Jos√© do B	S√£o Jos√© do Barreiro
261360-S√£o Jos√© do E	S√£o Jos√© do Egito
261370-S√£o Louren√ßo	S√£o Louren√ßo
261380-S√£o Vicente F	S√£o Vicente F
261390-Serra Talhada	Serra Talhada
261420-Sirinha√©m	Sirinha√©m
261450-Surubim	Surubim
261485-Tamandar√©	Tamandar√©
261530-Timba√∫ba	Timba√∫ba
261630-Vic√™ncia	Vic√™ncia
261640-Vit√≥ria de Sa	Vit√≥ria de Santo Ant√£o
270030-Arapiraca	Arapiraca
270040-Atalaia-Al	Atalaia Al
270050-Barra de Sant	Barra de Sant
270060-Barra de S√£o	Barra de S√£o Francisco
270130-Cajueiro	Cajueiro
270140-Campo Alegre-	Campo Alegre
270230-Coruripe	Coruripe
270320-Igreja Nova	Igreja Nova
270360-Japaratinga	Japaratinga
270375-Jequi√° da Pra	Jequi√° da Pra
270410-Lagoa da Cano	Lagoa da Cano
270430-Macei√≥	Macei√≥
270450-Maragogi	Maragogi
270470-Marechal Deod	Marechal Deodoro
270510-Matriz de Cam	Matriz de Cam
270630-Palmeira dos	Palmeira dos √çndios
270670-Penedo	Penedo
270690-Pilar-Al	Pilar Al
270710-Piranhas-Al	Piranhas Al
270750-Porto Real do	Porto Real do Col√©gio
270770-Rio Largo	Rio Largo
270790-Santa Luzia d	Santa Luzia D
270800-Santana do Ip	Santana do Ipanema
270830-S√£o Jos√© da L	S√£o Jos√© da Lapa
270840-S√£o Jos√© da T	S√£o Jos√© da T
270850-S√£o Lu√≠s do Q	S√£o Lu√≠s do Quitunde
270860-S√£o Miguel do	S√£o Miguel do Araguaia
270880-S√£o Sebasti√£o	S√£o Sebasti√£o
270930-Uni√£o dos Pal	Uni√£o dos Palmares
280030-Aracaju	Aracaju
280060-Barra dos Coq	Barra dos Coqueiros
280100-Campo do Brit	Campo do Brit
280130-Capela-Se	Capela Se
280150-Carm√≥polis	Carm√≥polis
280210-Est√¢ncia	Est√¢ncia
280230-Frei Paulo	Frei Paulo
280290-Itabaiana-Se	Itabaiana Se
280300-Itabaianinha	Itabaianinha
280330-Japaratuba	Japaratuba
280350-Lagarto	Lagarto
280360-Laranjeiras	Laranjeiras
280400-Maruim	Maruim
280440-Ne√≥polis	Ne√≥polis
280450-Nossa Senhora	Nossa Senhora
280460-Nossa Senhora	Nossa Senhora
280480-Nossa Senhora	Nossa Senhora
280550-Po√ßo Verde	Po√ßo Verde
280570-Propri√°	Propri√°
280600-Ribeir√≥polis	Ribeir√≥polis
280610-Ros√°rio do Ca	Ros√°rio do Catete
280670-S√£o Crist√≥v√£o	S√£o Crist√≥v√£o
280710-Sim√£o Dias	Sim√£o Dias
290030-Acajutiba	Acajutiba
290050-√ârico Cardoso	√ârico Cardoso
290070-Alagoinhas	Alagoinhas
290100-Amargosa	Amargosa
290110-Am√©lia Rodrig	Am√©lia Rodrigues
290135-Andorinha	Andorinha
290200-Aracatu	Aracatu
290220-Aramari	Aramari
290280-Barra da Esti	Barra da Estiva
290290-Barra do Cho√ß	Barra do Cho√ßa
290320-Barreiras	Barreiras
290327-Barrocas	Barrocas
290340-Belmonte-Ba	Belmonte Ba
290390-Bom Jesus da	Bom Jesus da Lapa
290440-Brejol√¢ndia	Brejol√¢ndia
290460-Brumado	Brumado
290470-Buerarema	Buerarema
290490-Cachoeira	Cachoeira
290500-Cacul√©	Cacul√©
290520-Caetit√©	Caetit√©
290570-Cama√ßari	Cama√ßari
290580-Camamu	Camamu
290600-Campo Formoso	Campo Formoso
290650-Candeias-Ba	Candeias Ba
290685-Capela do Alt	Capela do Alto
290687-Capim Grosso	Capim Grosso
290720-Casa Nova	Casa Nova
290730-Castro Alves	Castro Alves
290750-Catu	Catu
290780-C√≠cero Dantas	C√≠cero Dantas
290810-Cocos	Cocos
290820-Concei√ß√£o da	Concei√ß√£o da Barra
290830-Concei√ß√£o do	Concei√ß√£o do Araguaia
290840-Concei√ß√£o do	Concei√ß√£o do Araguaia
290850-Concei√ß√£o do	Concei√ß√£o do Araguaia
290860-Conde-Ba	Conde Ba
290890-Cora√ß√£o de Ma	Cora√ß√£o de Ma
290930-Correntina	Correntina
290940-Cotegipe	Cotegipe
290980-Cruz das Alma	Cruz das Almas
291005-Dias D'√Åvila	Dias d'√Åvila
291020-Dom Macedo Co	Dom Macedo Costa
291060-Esplanada	Esplanada
291070-Euclides da C	Euclides da Cunha
291072-Eun√°polis	Eun√°polis
291080-Feira de Sant	Feira de Santana
291085-Filad√©lfia-Ba	Filad√©lfia Ba
291120-Gandu	Gandu
291130-Gentio do Our	Gentio do Ouro
291160-Governador Ma	Governador Mangabeira
291170-Guanambi	Guanambi
291190-Ia√ßu	Ia√ßu
291220-Ibicoara	Ibicoara
291270-Ibirapitanga	Ibirapitanga
291280-Ibirapu√£	Ibirapu√£
291290-Ibirataia	Ibirataia
291320-Ibotirama	Ibotirama
291345-Igrapi√∫na	Igrapi√∫na
291350-Igua√≠	Igua√≠
291360-Ilh√©us	Ilh√©us
291390-Ipia√∫	Ipia√∫
291400-Ipir√°	Ipir√°
291460-Irec√™	Irec√™
291470-Itaberaba	Itaberaba
291480-Itabuna	Itabuna
291490-Itacar√©	Itacar√©
291560-Itamaraju	Itamaraju
291610-Itaparica	Itaparica
291640-Itapetinga	Itapetinga
291650-Itapicuru	Itapicuru
291680-Itarantim	Itarantim
291685-Itatim	Itatim
291730-Ituber√°	Ituber√°
291735-Jaborandi-Ba	Jaborandi Ba
291750-Jacobina	Jacobina
291760-Jaguaquara	Jaguaquara
291770-Jaguarari	Jaguarari
291800-Jequi√©	Jequi√©
291840-Juazeiro	Juazeiro
291920-Lauro de Frei	Lauro de Freitas
291950-Livramento de	Livramento de Nossa Senhora
291955-Lu√≠s Eduardo	Lu√≠s Eduardo Magalh√£es
291980-Maca√∫bas	Maca√∫bas
292000-Maiquinique	Maiquinique
292040-Manoel Vitori	Manoel Vitori
292070-Mara√∫	Mara√∫
292100-Mata de S√£o J	Mata de S√£o Jo√£o
292110-Medeiros Neto	Medeiros Neto
292140-Mirangaba	Mirangaba
292150-Monte Santo	Monte Santo
292190-Mucug√™	Mucug√™
292200-Mucuri	Mucuri
292230-Muritiba	Muritiba
292240-Mutu√≠pe	Mutu√≠pe
292250-Nazar√©-Ba	Nazar√© Ba
292300-Nova Vi√ßosa	Nova Vi√ßosa
292335-Ourol√¢ndia	Ourol√¢ndia
292350-Palmeiras	Palmeiras
292360-Paramirim	Paramirim
292370-Paratinga	Paratinga
292400-Paulo Afonso	Paulo Afonso
292430-Piat√£	Piat√£
292467-Pira√≠ do Nort	Pira√≠ do Norte
292490-Planaltino	Planaltino
292500-Planalto-Ba	Planalto Ba
292510-Po√ß√µes	Po√ß√µes
292520-Pojuca	Pojuca
292530-Porto Seguro	Porto Seguro
292550-Prado	Prado
292560-Presidente Du	Presidente Du
292580-Queimadas-Ba	Queimadas Ba
292600-Remanso	Remanso
292630-Riach√£o do Ja	Riach√£o do Jacu√≠pe
292650-Ribeira do Am	Ribeira do Am
292660-Ribeira do Po	Ribeira do Pombal
292700-Rio Real	Rio Real
292720-Ruy Barbosa-B	Ruy Barbosa B
292740-Salvador	Salvador
292770-Santa Cruz Ca	Santa Cruz Cabr√°lia
292810-Santa Maria d	Santa Maria da Vit√≥ria
292840-Santa Rita de	Santa Rita de C√°ssia
292850-Santa Teresin	Santa Teresin
292860-Santo Amaro	Santo Amaro
292870-Santo Ant√¥nio	Santo Ant√¥nio de Jesus
292880-Santo Est√™v√£o	Santo Est√™v√£o
292890-S√£o Desid√©rio	S√£o Desid√©rio
292920-S√£o Francisco	S√£o Francisco do Sul
292930-S√£o Gon√ßalo d	S√£o Gon√ßalo do Sapuca√≠
292940-S√£o Miguel da	S√£o Miguel das Miss√µes
292950-S√£o Sebasti√£o	S√£o Sebasti√£o
292960-Sapea√ßu	Sapea√ßu
292970-S√°tiro Dias	S√°tiro Dias
292990-Seabra	Seabra
293010-Senhor do Bon	Senhor do Bonfim
293050-Serrinha-Ba	Serrinha Ba
293070-Sim√µes Filho	Sim√µes Filho
293075-S√≠tio do Mato	S√≠tio do Mato
293100-Tanha√ßu	Tanha√ßu
293135-Teixeira de F	Teixeira de Freitas
293140-Teodoro Sampa	Teodoro Sampaio
293150-Teofil√¢ndia	Teofil√¢ndia
293170-Terra Nova-Ba	Terra Nova Ba
293180-Tremedal	Tremedal
293190-Tucano	Tucano
293210-Uba√≠ra	Uba√≠ra
293250-Una	Una
293280-Utinga	Utinga
293290-Valen√ßa-Ba	Valen√ßa Ba
293300-Valente	Valente
293310-V√°rzea do Po√ß	V√°rzea do Po√ß
293320-Vera Cruz-Ba	Vera Cruz Ba
293330-Vit√≥ria da Co	Vit√≥ria da Conquista
293360-Xique-Xique	Xique Xique
310020-Abaet√©	Abaet√©
310030-Abre Campo	Abre Campo
310070-√Ågua Comprida	√Ågua Comprida
310090-√Åguas Formosa	√Åguas Formosa
310100-√Åguas Vermelh	√Åguas Vermelh
310110-Aimor√©s	Aimor√©s
310130-Alagoa	Alagoa
310150-Al√©m Para√≠ba	Al√©m Para√≠ba
310160-Alfenas	Alfenas
310170-Almenara	Almenara
310180-Alpercata	Alpercata
310190-Alpin√≥polis	Alpin√≥polis
310230-Alvin√≥polis	Alvin√≥polis
310260-Andradas	Andradas
310280-Andrel√¢ndia	Andrel√¢ndia
310290-Ant√¥nio Carlo	Ant√¥nio Carlos
310300-Ant√¥nio Dias	Ant√¥nio Dias
310340-Ara√ßua√≠	Ara√ßua√≠
310350-Araguari	Araguari
310375-Arapor√£	Arapor√£
310390-Ara√∫jos	Ara√∫jos
310400-Arax√°	Arax√°
310410-Arceburgo	Arceburgo
310420-Arcos	Arcos
310450-Arinos	Arinos
310460-Astolfo Dutra	Astolfo Dutra
310480-Augusto de Li	Augusto de Li
310490-Baependi	Baependi
310500-Baldim	Baldim
310510-Bambu√≠	Bambu√≠
310530-Bandeira do S	Bandeira do Sul
310540-Bar√£o de Coca	Bar√£o de Cocais
310560-Barbacena	Barbacena
310590-Barroso	Barroso
310600-Bela Vista de	Bela Vista de Goi√°s
310620-Belo Horizont	Belo Horizonte
310630-Belo Oriente	Belo Oriente
310640-Belo Vale	Belo Vale
310670-Betim	Betim
310690-Bicas	Bicas
310710-Boa Esperan√ßa	Boa Esperan√ßa do Igua√ßu
310730-Bocai√∫va	Bocai√∫va
310740-Bom Despacho	Bom Despacho
310750-Bom Jardim de	Bom Jardim de
310770-Bom Jesus do	Bom Jesus do
310780-Bom Jesus do	Bom Jesus do
310800-Bom Sucesso-M	Bom Sucesso M
310820-Bonfin√≥polis	Bonfin√≥polis
310830-Borda da Mata	Borda da Mata
310840-Botelhos	Botelhos
310850-Botumirim	Botumirim
310855-Brasil√¢ndia d	Brasil√¢ndia do Sul
310860-Bras√≠lia de M	Bras√≠lia de M
310900-Brumadinho	Brumadinho
310910-Bueno Brand√£o	Bueno Brand√£o
310930-Buritis-Mg	Buritis Mg
310940-Buritizeiro	Buritizeiro
310950-Cabo Verde	Cabo Verde
310970-Cachoeira de	Cachoeira de Minas
310990-Caetan√≥polis	Caetan√≥polis
311000-Caet√©	Caet√©
311030-Caldas	Caldas
311050-Camanducaia	Camanducaia
311060-Cambu√≠	Cambu√≠
311100-Campestre-Mg	Campestre Mg
311110-Campina Verde	Campina Verde
311120-Campo Belo	Campo Belo
311140-Campo Florido	Campo Florido
311160-Campos Gerais	Campos Gerais
311180-Can√°polis-Mg	Can√°polis Mg
311200-Candeias-Mg	Candeias Mg
311205-Cantagalo-Mg	Cantagalo Mg
311220-Capela Nova	Capela Nova
311230-Capelinha	Capelinha
311250-Capim Branco	Capim Branco
311260-Capin√≥polis	Capin√≥polis
311290-Caputira	Caputira
311300-Cara√≠	Cara√≠
311320-Caranda√≠	Caranda√≠
311330-Carangola	Carangola
311340-Caratinga	Caratinga
311350-Carbonita	Carbonita
311360-Carea√ßu	Carea√ßu
311370-Carlos Chagas	Carlos Chagas
311390-Carmo da Cach	Carmo da Cachoeira
311400-Carmo da Mata	Carmo da Mata
311410-Carmo de Mina	Carmo de Mina
311420-Carmo do Caju	Carmo do Cajuru
311430-Carmo do Para	Carmo do Parana√≠ba
311440-Carmo do Rio	Carmo do Rio Claro
311450-Carm√≥polis de	Carm√≥polis de Minas
311455-Carneirinho	Carneirinho
311510-C√°ssia	C√°ssia
311530-Cataguases	Cataguases
311550-Caxambu	Caxambu
311580-Centralina	Centralina
311590-Ch√°cara	Ch√°cara
311640-Claraval	Claraval
311660-Cl√°udio	Cl√°udio
311670-Coimbra	Coimbra
311690-Comendador Go	Comendador Gomes
311730-Concei√ß√£o das	Concei√ß√£o das Alagoas
311750-Concei√ß√£o do	Concei√ß√£o do Araguaia
311760-Concei√ß√£o do	Concei√ß√£o do Araguaia
311770-Concei√ß√£o do	Concei√ß√£o do Araguaia
311780-Concei√ß√£o dos	Concei√ß√£o dos Ouros
311787-Confins	Confins
311790-Congonhal	Congonhal
311800-Congonhas	Congonhas
311830-Conselheiro L	Conselheiro Lafaiete
311840-Conselheiro P	Conselheiro Pena
311850-Consola√ß√£o	Consola√ß√£o
311860-Contagem	Contagem
311870-Coqueiral	Coqueiral
311890-Cordisburgo	Cordisburgo
311910-Corinto	Corinto
311930-Coromandel	Coromandel
311940-Coronel Fabri	Coronel Fabriciano
311960-Coronel Pache	Coronel Pacheco
311970-Coronel Xavie	Coronel Xavier Chaves
311980-C√≥rrego Danta	C√≥rrego Danta
311990-C√≥rrego do Bo	C√≥rrego do Bom Jesus
311995-C√≥rrego Fundo	C√≥rrego Fundo
312080-Cruz√≠lia	Cruz√≠lia
312090-Curvelo	Curvelo
312120-Delfin√≥polis	Delfin√≥polis
312125-Delta	Delta
312140-Desterro de E	Desterro de Entre Rios
312160-Diamantina	Diamantina
312230-Divin√≥polis	Divin√≥polis
312240-Divisa Nova	Divisa Nova
312290-Dona Euz√©bia	Dona Euz√©bia
312300-Dores de Camp	Dores de Campos
312320-Dores do Inda	Dores do Inda
312360-El√≥i Mendes	El√≥i Mendes
312380-Engenheiro Na	Engenheiro Navarro
312385-Entre Folhas	Entre Folhas
312390-Entre Rios de	Entre Rios de
312400-Erv√°lia	Erv√°lia
312410-Esmeraldas	Esmeraldas
312420-Espera Feliz	Espera Feliz
312430-Espinosa	Espinosa
312450-Estiva	Estiva
312490-Eugen√≥polis	Eugen√≥polis
312510-Extrema	Extrema
312550-S√£o Gon√ßalo d	S√£o Gon√ßalo do Sapuca√≠
312570-Felixl√¢ndia	Felixl√¢ndia
312590-Ferros	Ferros
312600-Florestal	Florestal
312610-Formiga	Formiga
312630-Fortaleza de	Fortaleza de
312660-Francisco Dum	Francisco Dumont
312670-Francisco S√°	Francisco S√°
312675-Francisc√≥poli	Francisc√≥poli
312700-Fronteira	Fronteira
312710-Frutal	Frutal
312738-Goian√°	Goian√°
312740-Gon√ßalves	Gon√ßalves
312760-Gouv√™a	Gouv√™a
312770-Governador Va	Governador Valadares
312780-Gr√£o Mogol	Gr√£o Mogol
312800-Guanh√£es	Guanh√£es
312810-Guap√©	Guap√©
312820-Guaraciaba-Mg	Guaraciaba Mg
312830-Guaran√©sia	Guaran√©sia
312840-Guarani	Guarani
312860-Guarda-Mor	Guarda Mor
312870-Guaxup√©	Guaxup√©
312880-Guidoval	Guidoval
312890-Guimar√¢nia	Guimar√¢nia
312900-Guiricema	Guiricema
312930-Iapu	Iapu
312940-Ibertioga	Ibertioga
312950-Ibi√°	Ibi√°
312970-Ibiraci	Ibiraci
312980-Ibirit√©	Ibirit√©
313010-Igarap√©	Igarap√©
313020-Igaratinga	Igaratinga
313030-Iguatama	Iguatama
313040-Ijaci	Ijaci
313050-Ilic√≠nea	Ilic√≠nea
313055-Imb√© de Minas	Imb√© de Minas
313060-Inconfidentes	Inconfidentes
313065-Indaiabira	Indaiabira
313070-Indian√≥polis-	Indian√≥polis
313080-Inga√≠	Inga√≠
313115-Ipaba	Ipaba
313130-Ipatinga	Ipatinga
313160-Ira√≠ de Minas	Ira√≠ de Minas
313170-Itabira	Itabira
313190-Itabirito	Itabirito
313210-Itacarambi	Itacarambi
313220-Itaguara	Itaguara
313240-Itajub√°	Itajub√°
313250-Itamarandiba	Itamarandiba
313270-Itambacuri	Itambacuri
313300-Itamonte	Itamonte
313310-Itanhandu	Itanhandu
313320-Itanhomi	Itanhomi
313330-Itaobim	Itaobim
313340-Itapagipe	Itapagipe
313350-Itapecerica	Itapecerica
313360-Itapeva-Mg	Itapeva Mg
313370-Itatiaiu√ßu	Itatiaiu√ßu
313375-Ita√∫ de Minas	Ita√∫ de Minas
313380-Ita√∫na	Ita√∫na
313400-Itinga	Itinga
313420-Ituiutaba	Ituiutaba
313440-Iturama	Iturama
313450-Itutinga	Itutinga
313460-Jaboticatubas	Jaboticatubas
313470-Jacinto	Jacinto
313490-Jacutinga-Mg	Jacutinga Mg
313500-Jaguara√ßu	Jaguara√ßu
313505-Ja√≠ba	Ja√≠ba
313507-Jampruca	Jampruca
313510-Jana√∫ba	Jana√∫ba
313520-Janu√°ria	Janu√°ria
313530-Japara√≠ba	Japara√≠ba
313540-Jeceaba	Jeceaba
313550-Jequeri	Jequeri
313570-Jequitib√°	Jequitib√°
313620-Jo√£o Monlevad	Jo√£o Monlevade
313630-Jo√£o Pinheiro	Jo√£o Pinheiro
313640-Joaquim Fel√≠c	Joaquim Fel√≠cio
313660-Nova Uni√£o-Mg	Nova Uni√£o Mg
313665-Juatuba	Juatuba
313670-Juiz de Fora	Juiz de Fora
313710-Lagamar	Lagamar
313720-Lagoa da Prat	Lagoa da Prata
313750-Lagoa Formosa	Lagoa Formosa
313753-Lagoa Grande-	Lagoa Grande
313760-Lagoa Santa-M	Lagoa Santa M
313770-Lajinha	Lajinha
313800-Laranjal-Mg	Laranjal Mg
313810-Lassance	Lassance
313820-Lavras	Lavras
313840-Leopoldina	Leopoldina
313860-Lima Duarte	Lima Duarte
313862-Limeira do Oe	Limeira do Oeste
313870-Lumin√°rias	Lumin√°rias
313880-Luz	Luz
313900-Machado	Machado
313910-Madre de Deus	Madre de Deus de Minas
313920-Malacacheta	Malacacheta
313940-Manhua√ßu	Manhua√ßu
313950-Manhumirim	Manhumirim
313960-Mantena	Mantena
314000-Mariana	Mariana
314015-M√°rio Campos	M√°rio Campos
314020-Marip√° de Min	Marip√° de Min
314030-Marli√©ria	Marli√©ria
314050-Martinho Camp	Martinho Camp
314053-Martins Soare	Martins Soares
314070-Mateus Leme	Mateus Leme
314080-Matias Barbos	Matias Barbosa
314090-Matip√≥	Matip√≥
314110-Matozinhos	Matozinhos
314120-Matutina	Matutina
314140-Medina	Medina
314180-Minas Novas	Minas Novas
314190-Minduri	Minduri
314220-Mira√≠	Mira√≠
314230-Moeda	Moeda
314260-Monsenhor Pau	Monsenhor Paulo
314280-Monte Alegre	Monte Alegre
314290-Monte Azul	Monte Azul
314300-Monte Belo	Monte Belo
314310-Monte Carmelo	Monte Carmelo
314320-Monte Santo d	Monte Santo de Minas
314330-Montes Claros	Montes Claros
314340-Monte Si√£o	Monte Si√£o
314350-Morada Nova d	Morada Nova de Minas
314390-Muria√©	Muria√©
314400-Mutum	Mutum
314410-Muzambinho	Muzambinho
314430-Nanuque	Nanuque
314440-Nat√©rcia	Nat√©rcia
314450-Nazareno	Nazareno
314460-Nepomuceno	Nepomuceno
314470-Nova Era	Nova Era
314480-Nova Lima	Nova Lima
314500-Nova Ponte	Nova Ponte
314510-Nova Resende	Nova Resende
314520-Nova Serrana	Nova Serrana
314530-Novo Cruzeiro	Novo Cruzeiro
314540-Olaria	Olaria
314545-Olhos-D'√Ågua	Olhos D'√°gua
314560-Oliveira	Oliveira
314590-Ouro Branco-M	Ouro Branco M
314600-Ouro Fino	Ouro Fino
314610-Ouro Preto	Ouro Preto
314625-Padre Carvalh	Padre Carvalho
314650-Pains	Pains
314690-Papagaios	Papagaios
314700-Paracatu	Paracatu
314710-Par√° de Minas	Par√° de Minas
314720-Paragua√ßu	Paragua√ßu
314730-Parais√≥polis	Parais√≥polis
314740-Paraopeba	Paraopeba
314750-Passab√©m	Passab√©m
314760-Passa Quatro	Passa Quatro
314770-Passa Tempo	Passa Tempo
314790-Passos	Passos
314800-Patos de Mina	Patos de Minas
314810-Patroc√≠nio	Patroc√≠nio
314820-Patroc√≠nio do	Patroc√≠nio do Muria√©
314870-Pedra Azul	Pedra Azul
314890-Pedra do Inda	Pedra do Indai√°
314910-Pedralva	Pedralva
314930-Pedro Leopold	Pedro Leopoldo
314970-Perdig√£o	Perdig√£o
314980-Perdizes	Perdizes
314990-Perd√µes	Perd√µes
315010-Piau	Piau
315015-Piedade de Ca	Piedade de Caratinga
315030-Piedade do Ri	Piedade do Rio Grande
315040-Piedade dos G	Piedade dos G
315070-Pirajuba	Pirajuba
315080-Piranga	Piranga
315090-Pirangu√ßu	Pirangu√ßu
315100-Piranguinho	Piranguinho
315110-Pirapetinga	Pirapetinga
315120-Pirapora	Pirapora
315140-Pitangui	Pitangui
315150-Piu√≠	Piu√≠
315160-Planura	Planura
315170-Po√ßo Fundo	Po√ßo Fundo
315180-Po√ßos de Cald	Po√ßos de Caldas
315200-Pomp√©u	Pomp√©u
315210-Ponte Nova	Ponte Nova
315220-Porteirinha	Porteirinha
315240-Pot√©	Pot√©
315250-Pouso Alegre	Pouso Alegre
315260-Pouso Alto	Pouso Alto
315270-Prados	Prados
315280-Prata-Mg	Prata Mg
315290-Prat√°polis	Prat√°polis
315340-Presidente Ol	Presidente Oleg√°rio
315360-Prudente de M	Presidente Prudente
315400-Raul Soares	Raul Soares
315410-Recreio	Recreio
315415-Reduto	Reduto
315420-Resende Costa	Resende Costa
315430-Resplendor	Resplendor
315440-Ressaquinha	Ressaquinha
315460-Ribeir√£o das	Ribeir√£o das Neves
315470-Ribeir√£o Verm	Ribeir√£o Vermelho
315480-Rio Acima	Rio Acima
315490-Rio Casca	Rio Casca
315500-Rio Doce	Rio Doce
315540-Rio Novo	Rio Novo
315550-Rio Parana√≠ba	Rio Parana√≠ba
315570-Rio Piracicab	Rio Piracicab
315580-Rio Pomba	Rio Pomba
315610-Rit√°polis	Rit√°polis
315620-Rochedo de Mi	Rochedo de Mi
315630-Rodeiro	Rodeiro
315650-Rubelita	Rubelita
315670-Sabar√°	Sabar√°
315690-Sacramento	Sacramento
315700-Salinas	Salinas
315720-Santa B√°rbara	Santa B√°rbara d'Oeste
315733-Santa Cruz de	Santa Cruz de
315760-Santa F√© de M	Santa F√© de Minas
315770-Santa Juliana	Santa Juliana
315780-Santa Luzia-M	Santa Luzia M
315800-Santa Maria d	Santa Maria da Vit√≥ria
315820-Santa Maria d	Santa Maria da Vit√≥ria
315830-Santana da Va	Santana da Vargem
315840-Santana de Ca	Santana de Ca
315850-Santana de Pi	Santana de Parna√≠ba
315895-Santana do Pa	Santana do Para√≠so
315900-Santana do Ri	Santana do Riacho
315920-Santa Rita de	Santa Rita de C√°ssia
315935-Santa Rita de	Santa Rita de C√°ssia
315940-Santa Rita do	Santa Rita do Sapuca√≠
315960-Santa Rita do	Santa Rita do Sapuca√≠
315980-Santa Vit√≥ria	Santa Vit√≥ria
315990-Santo Ant√¥nio	Santo Ant√¥nio de Jesus
316000-Santo Ant√¥nio	Santo Ant√¥nio de Jesus
316010-Santo Ant√¥nio	Santo Ant√¥nio de Jesus
316040-Santo Ant√¥nio	Santo Ant√¥nio de Jesus
316070-Santos Dumont	Santos Dumont
316090-S√£o Br√°s do S	S√£o Br√°s do S
316100-S√£o Domingos	S√£o Domingos
316110-S√£o Francisco	S√£o Francisco do Sul
316120-S√£o Francisco	S√£o Francisco do Sul
316130-S√£o Francisco	S√£o Francisco do Sul
316150-S√£o Geraldo	S√£o Geraldo
316165-S√£o Geraldo d	S√£o Geraldo do Araguaia
316170-S√£o Gon√ßalo d	S√£o Gon√ßalo do Sapuca√≠
316180-S√£o Gon√ßalo d	S√£o Gon√ßalo do Sapuca√≠
316190-S√£o Gon√ßalo d	S√£o Gon√ßalo do Sapuca√≠
316200-S√£o Gon√ßalo d	S√£o Gon√ßalo do Sapuca√≠
316210-S√£o Gotardo	S√£o Gotardo
316220-S√£o Jo√£o Bati	S√£o Jo√£o Batista
316240-S√£o Jo√£o da P	S√£o Jo√£o da Ponta
316250-S√£o Jo√£o Del	S√£o Jo√£o del-Rei
316265-S√£o Jo√£o do P	S√£o Jo√£o do P
316270-S√£o Jo√£o do P	S√£o Jo√£o do P
316290-S√£o Jo√£o Nepo	S√£o Jo√£o Nepomuceno
316292-S√£o Joaquim d	S√£o Joaquim da Barra
316295-S√£o Jos√© da L	S√£o Jos√© da Lapa
316310-S√£o Jos√© da V	S√£o Jos√© da Varginha
316370-S√£o Louren√ßo	S√£o Louren√ßo
316380-S√£o Miguel do	S√£o Miguel do Araguaia
316440-S√£o Sebasti√£o	S√£o Sebasti√£o
316443-S√£o Sebasti√£o	S√£o Sebasti√£o
316460-S√£o Sebasti√£o	S√£o Sebasti√£o
316470-S√£o Sebasti√£o	S√£o Sebasti√£o
316490-S√£o Sebasti√£o	S√£o Sebasti√£o
316500-S√£o Tiago	S√£o Tiago
316510-S√£o Tom√°s de	S√£o Tom√°s de Aquino
316530-S√£o Vicente d	S√£o Vicente de Minas
316540-Sapuca√≠-Mirim	Sapuca√≠ Mirim
316550-Sardo√°	Sardo√°
316553-Sarzedo	Sarzedo
316580-Senador Jos√©	Senador Jos√© Bento
316590-Senador Modes	Senador Modes
316610-Senhora do Po	Senhora do Porto
316670-Serra dos Aim	Serra dos Aimor√©s
316680-Serra do Sali	Serra do Salitre
316690-Serrania	Serrania
316700-Serranos	Serranos
316710-Serro	Serro
316720-Sete Lagoas	Sete Lagoas
316750-Sim√£o Pereira	Sim√£o Pereira
316780-Soledade de M	Soledade de Minas
316800-Taiobeiras	Taiobeiras
316810-Tapira-Mg	Tapira Mg
316850-Teixeiras	Teixeiras
316860-Te√≥filo Otoni	Te√≥filo Otoni
316870-Tim√≥teo	Tim√≥teo
316880-Tiradentes	Tiradentes
316900-Tocantins	Tocantins
316910-Toledo-Mg	Toledo Mg
316930-Tr√™s Cora√ß√µes	Tr√™s Cora√ß√µes
316935-Tr√™s Marias	Tr√™s Marias
316940-Tr√™s Pontas	Tr√™s Pontas
316960-Tupaciguara	Tupaciguara
316970-Turmalina-Mg	Turmalina Mg
316980-Turvol√¢ndia	Turvol√¢ndia
316990-Ub√°	Ub√°
317010-Uberaba	Uberaba
317020-Uberl√¢ndia	Uberl√¢ndia
317040-Una√≠	Una√≠
317047-Uruana de Min	Uruana de Min
317050-Uruc√¢nia	Uruc√¢nia
317070-Varginha	Varginha
317080-V√°rzea da Pal	V√°rzea da Palma
317100-Vazante	Vazante
317103-Verdel√¢ndia	Verdel√¢ndia
317107-Veredinha	Veredinha
317120-Vespasiano	Vespasiano
317130-Vi√ßosa-Mg	Vi√ßosa Mg
317170-Virg√≠nia	Virg√≠nia
317200-Visconde do R	Visconde do Rio Branco
320010-Afonso Cl√°udi	Afonso Cl√°udio
320013-√Åguia Branca	√Åguia Branca
320020-Alegre	Alegre
320030-Alfredo Chave	Alfredo Chaves
320040-Anchieta-Es	Anchieta Es
320060-Aracruz	Aracruz
320070-At√≠lio Vivacq	At√≠lio Viv√°cqua
320080-Baixo Guandu	Baixo Guandu
320090-Barra de S√£o	Barra de S√£o Francisco
320100-Boa Esperan√ßa	Boa Esperan√ßa do Igua√ßu
320110-Bom Jesus do	Bom Jesus do
320115-Brejetuba	Brejetuba
320120-Cachoeiro de	Cachoeiro de Itapemirim
320130-Cariacica	Cariacica
320140-Castelo	Castelo
320150-Colatina	Colatina
320160-Concei√ß√£o da	Concei√ß√£o da Barra
320170-Concei√ß√£o do	Concei√ß√£o do Araguaia
320180-Divino de S√£o	Divino de S√£o Louren√ßo
320190-Domingos Mart	Domingos Martins
320200-Dores do Rio	Dores do Rio Preto
320210-Ecoporanga	Ecoporanga
320220-Fund√£o	Fund√£o
320230-Gua√ßu√≠	Gua√ßu√≠
320240-Guarapari	Guarapari
320245-Ibatiba	Ibatiba
320250-Ibira√ßu	Ibira√ßu
320255-Ibitirama	Ibitirama
320260-Iconha	Iconha
320270-Itagua√ßu	Itagua√ßu
320280-Itapemirim	Itapemirim
320290-Itarana	Itarana
320300-I√∫na	I√∫na
320305-Jaguar√©	Jaguar√©
320310-Jer√¥nimo Mont	Jer√¥nimo Monteiro
320313-Jo√£o Neiva	Jo√£o Neiva
320316-Laranja da Te	Laranja da Terra
320320-Linhares	Linhares
320332-Marataizes	Marataizes
320334-Marechal Flor	Marechal Flor
320335-Maril√¢ndia	Maril√¢ndia
320340-Mimoso do Sul	Mimoso do Sul
320350-Montanha	Montanha
320370-Muniz Freire	Muniz Freire
320390-Nova Ven√©cia	Nova Ven√©cia
320405-Pedro Can√°rio	Pedro Can√°rio
320410-Pinheiros	Pinheiros
320420-Pi√∫ma	Pi√∫ma
320430-Presidente Ke	Presidente Kennedy
320435-Rio Bananal	Rio Bananal
320440-Rio Novo do S	Rio Novo do S
320450-Santa Leopold	Santa Leopold
320455-Santa Maria d	Santa Maria da Vit√≥ria
320460-Santa Teresa	Santa Teresa
320465-S√£o Domingos	S√£o Domingos
320470-S√£o Gabriel d	S√£o Gabriel D
320480-S√£o Jos√© do C	S√£o Jos√© do Cedro
320490-S√£o Mateus	S√£o Mateus
320495-S√£o Roque do	S√£o Roque do Cana√£
320500-Serra	Serra
320501-Sooretama	Sooretama
320503-Vargem Alta	Vargem Alta
320506-Venda Nova do	Venda Nova do Imigrante
320510-Viana-Es	Viana Es
320515-Vila Pav√£o	Vila Pav√£o
320520-Vila Velha	Vila Velha
320530-Vit√≥ria	Vit√≥ria
330010-Angra dos Rei	Angra dos Reis
330015-Aperib√©	Aperib√©
330020-Araruama	Araruama
330022-Areal	Areal
330023-Arma√ß√£o de B√∫	Arma√ß√£o dos B√∫zios
330025-Arraial do Ca	Arraial do Cabo
330030-Barra do Pira	Barra do Pira
330040-Barra Mansa	Barra Mansa
330045-Belford Roxo	Belford Roxo
330050-Bom Jardim-Rj	Bom Jardim Rj
330060-Bom Jesus do	Bom Jesus do
330070-Cabo Frio	Cabo Frio
330080-Cachoeiras de	Cachoeiras de Macacu
330093-Carapebus	Carapebus
330095-Comendador Le	Comendador Levy Gasparian
330100-Campos dos Go	Campos dos Goytacazes
330110-Cantagalo-Rj	Cantagalo Rj
330120-Carmo	Carmo
330130-Casimiro de A	Casimiro de A
330140-Concei√ß√£o de	Concei√ß√£o de Macabu
330150-Cordeiro	Cordeiro
330160-Duas Barras	Duas Barras
330170-Duque de Caxi	Duque de Caxias
330180-Engenheiro Pa	Engenheiro Paulo de Frontin
330185-Guapimirim	Guapimirim
330187-Iguaba Grande	Iguaba Grande
330190-Itabora√≠	Itabora√≠
330200-Itagua√≠	Itagua√≠
330205-Italva	Italva
330220-Itaperuna	Itaperuna
330225-Itatiaia	Itatiaia
330227-Japeri	Japeri
330230-Laje do Muria	Laje do Muria√©
330240-Maca√©	Maca√©
330245-Macuco	Macuco
330250-Mag√©	Mag√©
330260-Mangaratiba	Mangaratiba
330270-Maric√°	Maric√°
330280-Mendes	Mendes
330285-Mesquita-Rj	Mesquita Rj
330290-Miguel Pereir	Miguel Pereira
330300-Miracema	Miracema
330310-Natividade-Rj	Natividade Rj
330320-Nil√≥polis	Nil√≥polis
330330-Niter√≥i	Niter√≥i
330340-Nova Friburgo	Nova Friburgo
330350-Nova Igua√ßu	Nova Igua√ßu
330360-Paracambi	Paracambi
330370-Para√≠ba do Su	Para√≠ba do Sul
330380-Parati	Parati
330385-Paty do Alfer	Paty do Alferes
330390-Petr√≥polis	Petr√≥polis
330395-Pinheiral	Pinheiral
330400-Pira√≠	Pira√≠
330410-Porci√∫ncula	Porci√∫ncula
330411-Porto Real	Porto Real
330412-Quatis	Quatis
330414-Queimados	Queimados
330415-Quissam√£	Quissam√£
330420-Resende	Resende
330430-Rio Bonito	Rio Bonito
330452-Rio das Ostra	Rio das Ostras
330455-Rio de Janeir	Rio de Janeiro
330460-Santa Maria M	Santa Maria Madalena
330470-Santo Ant√¥nio	Santo Ant√¥nio de Jesus
330475-S√£o Francisco	S√£o Francisco do Sul
330480-S√£o Fid√©lis	S√£o Fid√©lis
330490-S√£o Gon√ßalo	S√£o Gon√ßalo
330500-S√£o Jo√£o da B	S√£o Jo√£o da B
330510-S√£o Jo√£o de M	S√£o Jo√£o de Meriti
330515-S√£o Jos√© do V	S√£o Jos√© do Vale do Rio Preto
330520-S√£o Pedro da	S√£o Pedro da √Ågua Branca
330540-Sapucaia-Rj	Sapucaia Rj
330550-Saquarema	Saquarema
330555-Serop√©dica	Serop√©dica
330560-Silva Jardim	Silva Jardim
330575-Tangu√°	Tangu√°
330580-Teres√≥polis	Teres√≥polis
330600-Tr√™s Rios	Tr√™s Rios
330610-Valen√ßa-Rj	Valen√ßa Rj
330615-Varre-Sai	Varre Sai
330620-Vassouras	Vassouras
330630-Volta Redonda	Volta Redonda
350010-Adamantina	Adamantina
350020-Adolfo	Adolfo
350030-Agua√≠	Agua√≠
350040-√Åguas da Prat	√Åguas da Prat
350050-√Åguas de Lind	√Åguas de Lindoia
350055-√Åguas de Sant	√Åguas de Sant
350060-√Åguas de S√£o	√Åguas de S√£o
350070-Agudos	Agudos
350075-Alambari	Alambari
350090-Altair	Altair
350100-Altin√≥polis	Altin√≥polis
350115-Alum√≠nio	Alum√≠nio
350120-√Ålvares Flore	√Ålvares Florence
350130-√Ålvares Macha	√Ålvares Machado
350160-Americana	Americana
350170-Am√©rico Brasi	Am√©rico Brasiliense
350190-Amparo-Sp	Amparo Sp
350200-Anal√¢ndia	Anal√¢ndia
350210-Andradina	Andradina
350220-Angatuba	Angatuba
350230-Anhembi	Anhembi
350240-Anhumas	Anhumas
350250-Aparecida-Sp	Aparecida Sp
350260-Aparecida D'O	Aparecida d'Oeste
350270-Apia√≠	Apia√≠
350275-Ara√ßariguama	Ara√ßariguama
350280-Ara√ßatuba	Ara√ßatuba
350290-Ara√ßoiaba da	Ara√ßoiaba da Serra
350300-Aramina	Aramina
350310-Arandu	Arandu
350320-Araraquara	Araraquara
350330-Araras	Araras
350340-Arealva	Arealva
350350-Areias	Areias
350360-Arei√≥polis	Arei√≥polis
350370-Ariranha	Ariranha
350380-Artur Nogueir	Artur Nogueira
350390-Aruj√°	Aruj√°
350400-Assis	Assis
350410-Atibaia	Atibaia
350420-Auriflama	Auriflama
350440-Avanhandava	Avanhandava
350450-Avar√©	Avar√©
350460-Bady Bassitt	Bady Bassitt
350480-B√°lsamo	B√°lsamo
350490-Bananal	Bananal
350510-Barbosa	Barbosa
350520-Bariri	Bariri
350530-Barra Bonita-	Barra Bonita
350550-Barretos	Barretos
350560-Barrinha	Barrinha
350570-Barueri	Barueri
350580-Bastos	Bastos
350590-Batatais	Batatais
350600-Bauru	Bauru
350610-Bebedouro	Bebedouro
350630-Bernardino de	Bernardino de Campos
350635-Bertioga	Bertioga
350640-Bilac	Bilac
350650-Birigui	Birigui
350660-Biritiba-Miri	Biritiba Miri
350670-Boa Esperan√ßa	Boa Esperan√ßa do Igua√ßu
350680-Bocaina-Sp	Bocaina Sp
350690-Bofete	Bofete
350700-Boituva	Boituva
350710-Bom Jesus dos	Bom Jesus dos Perd√µes
350715-Bom Sucesso d	Bom Sucesso do Sul
350720-Bor√°	Bor√°
350730-Borac√©ia	Borac√©ia
350740-Borborema-Sp	Borborema Sp
350745-Borebi	Borebi
350750-Botucatu	Botucatu
350760-Bragan√ßa Paul	Bragan√ßa Paulista
350780-Brod√≥squi	Brod√≥squi
350790-Brotas	Brotas
350800-Buri	Buri
350810-Buritama	Buritama
350820-Buritizal	Buritizal
350830-Cabr√°lia Paul	Cabr√°lia Paul
350840-Cabre√∫va	Cabre√∫va
350850-Ca√ßapava	Ca√ßapava
350860-Cachoeira Pau	Cachoeira Pau
350880-Cafel√¢ndia-Sp	Cafel√¢ndia Sp
350890-Caiabu	Caiabu
350900-Caieiras	Caieiras
350920-Cajamar	Cajamar
350925-Cajati	Cajati
350930-Cajobi	Cajobi
350940-Cajuru	Cajuru
350945-Campina do Mo	Campina do Mo
350950-Campinas	Campinas
350960-Campo Limpo P	Campo Limpo Paulista
350970-Campos do Jor	Campos do Jord√£o
350980-Campos Novos	Campos Novos
350990-Canan√©ia	Canan√©ia
350995-Canas	Canas
351000-C√¢ndido Mota	C√¢ndido Mota
351015-Canitar	Canitar
351020-Cap√£o Bonito	Cap√£o Bonito
351030-Capela do Alt	Capela do Alto
351040-Capivari	Capivari
351050-Caraguatatuba	Caraguatatuba
351060-Carapicu√≠ba	Carapicu√≠ba
351080-Casa Branca	Casa Branca
351100-Castilho	Castilho
351110-Catanduva	Catanduva
351130-Cedral-Sp	Cedral Sp
351140-Cerqueira C√©s	Cerqueira C√©sar
351150-Cerquilho	Cerquilho
351160-Ces√°rio Lange	Ces√°rio Lange
351170-Charqueada	Charqueada
351190-Clementina	Clementina
351200-Colina	Colina
351210-Col√¥mbia	Col√¥mbia
351220-Conchal	Conchal
351230-Conchas	Conchas
351240-Cordeir√≥polis	Cordeir√≥polis
351250-Coroados	Coroados
351260-Coronel Maced	Coronel Macedo
351270-Corumbata√≠	Corumbata√≠
351280-Cosm√≥polis	Cosm√≥polis
351290-Cosmorama	Cosmorama
351300-Cotia	Cotia
351310-Cravinhos	Cravinhos
351320-Cristais Paul	Cristais Paulista
351340-Cruzeiro	Cruzeiro
351350-Cubat√£o	Cubat√£o
351360-Cunha	Cunha
351370-Descalvado	Descalvado
351380-Diadema	Diadema
351385-Dirce Reis	Dirce Reis
351390-Divinol√¢ndia	Divinol√¢ndia
351400-Dobrada	Dobrada
351410-Dois C√≥rregos	Dois C√≥rregos
351430-Dourado	Dourado
351440-Dracena	Dracena
351450-Duartina	Duartina
351460-Dumont	Dumont
351470-Echapor√£	Echapor√£
351490-Elias Fausto	Elias Fausto
351492-Elisi√°rio	Elisi√°rio
351495-Emba√∫ba	Emba√∫ba
351500-Embu	Embu
351510-Embu-Gua√ßu	Embu Gua√ßu
351515-Engenheiro Co	Engenheiro Coelho
351518-Esp√≠rito Sant	Esp√≠rito Santo do Pinhal
351520-Estrela D'Oes	Estrela d'Oeste
351535-Euclides da C	Euclides da Cunha
351540-Fartura	Fartura
351550-Fernand√≥polis	Fernand√≥polis
351565-Fern√£o	Fern√£o
351570-Ferraz de Vas	Ferraz de Vas
351600-Fl√≥rida Pauli	Fl√≥rida Paulista
351610-Flor√≠nia	Flor√≠nia
351620-Franca	Franca
351630-Francisco Mor	Francisco Morato
351640-Franco da Roc	Franco da Rocha
351650-Gabriel Monte	Gabriel Monte
351660-G√°lia	G√°lia
351670-Gar√ßa	Gar√ßa
351685-Gavi√£o Peixot	Gavi√£o Peixoto
351690-General Salga	General Salga
351710-Glic√©rio	Glic√©rio
351720-Guai√ßara	Guai√ßara
351740-Gua√≠ra-Sp	Gua√≠ra Sp
351750-Guapia√ßu	Guapia√ßu
351760-Guapiara	Guapiara
351770-Guar√°	Guar√°
351780-Guara√ßa√≠	Guara√ßa√≠
351790-Guaraci-Sp	Guaraci Sp
351800-Guarani D'Oes	Guarani d'Oeste
351820-Guararapes	Guararapes
351830-Guararema	Guararema
351840-Guaratinguet√°	Guaratinguet√°
351850-Guare√≠	Guare√≠
351860-Guariba	Guariba
351870-Guaruj√°	Guaruj√°
351880-Guarulhos	Guarulhos
351885-Guatapar√°	Guatapar√°
351900-Hercul√¢ndia	Hercul√¢ndia
351905-Holambra	Holambra
351907-Hortol√¢ndia	Hortol√¢ndia
351910-Iacanga	Iacanga
351920-Iacri	Iacri
351930-Ibat√©	Ibat√©
351940-Ibir√°	Ibir√°
351950-Ibirarema	Ibirarema
351960-Ibitinga	Ibitinga
351970-Ibi√∫na	Ibi√∫na
351980-Ic√©m	Ic√©m
352000-Igara√ßu do Ti	Igara√ßu do Tiet√™
352010-Igarapava	Igarapava
352020-Igarat√°	Igarat√°
352030-Iguape	Iguape
352040-Ilhabela	Ilhabela
352042-Ilha Comprida	Ilha Comprida
352044-Ilha Solteira	Ilha Solteira
352050-Indaiatuba	Indaiatuba
352070-Indiapor√£	Indiapor√£
352090-Ipau√ßu	Ipau√ßu
352100-Iper√≥	Iper√≥
352110-Ipe√∫na	Ipe√∫na
352130-Ipu√£	Ipu√£
352140-Iracem√°polis	Iracem√°polis
352160-Irapuru	Irapuru
352170-Itaber√°	Itaber√°
352180-Ita√≠	Ita√≠
352190-Itajobi	Itajobi
352210-Itanha√©m	Itanha√©m
352215-Ita√≥ca	Ita√≥ca
352220-Itapecerica d	Itapecerica da Serra
352230-Itapetininga	Itapetininga
352240-Itapeva-Sp	Itapeva Sp
352250-Itapevi	Itapevi
352260-Itapira	Itapira
352270-It√°polis	It√°polis
352280-Itaporanga-Sp	Itaporanga Sp
352290-Itapu√≠	Itapu√≠
352310-Itaquaquecetu	Itaquaquecetuba
352320-Itarar√©	Itarar√©
352340-Itatiba	Itatiba
352350-Itatinga	Itatinga
352360-Itirapina	Itirapina
352380-Itobi	Itobi
352390-Itu	Itu
352400-Itupeva	Itupeva
352410-Ituverava	Ituverava
352430-Jaboticabal	Jaboticabal
352440-Jacare√≠	Jacare√≠
352450-Jaci	Jaci
352460-Jacupiranga	Jacupiranga
352470-Jaguari√∫na	Jaguari√∫na
352480-Jales	Jales
352490-Jambeiro	Jambeiro
352500-Jandira	Jandira
352510-Jardin√≥polis-	Jardin√≥polis
352520-Jarinu	Jarinu
352530-Ja√∫	Ja√∫
352540-Jeriquara	Jeriquara
352550-Joan√≥polis	Joan√≥polis
352570-Jos√© Bonif√°ci	Jos√© Bonif√°cio
352585-Jumirim	Jumirim
352590-Jundia√≠	Jundia√≠
352600-Junqueir√≥poli	Junqueir√≥polis
352610-Juqui√°	Juqui√°
352620-Juquitiba	Juquitiba
352630-Lagoinha	Lagoinha
352640-Laranjal Paul	Laranjal Paulista
352660-Lavrinhas	Lavrinhas
352670-Leme	Leme
352680-Len√ß√≥is Pauli	Len√ß√≥is Paulista
352690-Limeira	Limeira
352700-Lind√≥ia	Lind√≥ia
352710-Lins	Lins
352720-Lorena	Lorena
352730-Louveira	Louveira
352740-Luc√©lia	Luc√©lia
352760-Lu√≠s Ant√¥nio	Lu√≠s Ant√¥nio
352770-Luizi√¢nia	Luizi√¢nia
352780-Lup√©rcio	Lup√©rcio
352800-Macatuba	Macatuba
352810-Macaubal	Macaubal
352820-Maced√¥nia	Maced√¥nia
352830-Magda	Magda
352840-Mairinque	Mairinque
352850-Mairipor√£	Mairipor√£
352880-Maraca√≠	Maraca√≠
352885-Marapoama	Marapoama
352900-Mar√≠lia	Mar√≠lia
352920-Martin√≥polis	Martin√≥polis
352930-Mat√£o	Mat√£o
352940-Mau√°	Mau√°
352950-Mendon√ßa	Mendon√ßa
352970-Miguel√≥polis	Miguel√≥polis
352980-Mineiros do T	Mineiros do T
352990-Miracatu	Miracatu
353010-Mirand√≥polis	Mirand√≥polis
353020-Mirante do Pa	Mirante do Paranapanema
353030-Mirassol	Mirassol
353040-Mirassol√¢ndia	Mirassol√¢ndia
353050-Mococa	Mococa
353060-Moji das Cruz	Mogi das Cruzes
353070-Moji-Gua√ßu	Moji Gua√ßu
353080-Moji-Mirim	Moji Mirim
353090-Mombuca	Mombuca
353110-Mongagu√°	Mongagu√°
353120-Monte Alegre	Monte Alegre
353130-Monte Alto	Monte Alto
353140-Monte Apraz√≠v	Monte Apraz√≠v
353150-Monte Azul Pa	Monte Azul Paulista
353160-Monte Castelo	Monte Castelo
353180-Monte Mor	Monte Mor
353190-Morro Agudo	Morro Agudo
353200-Morungaba	Morungaba
353205-Motuca	Motuca
353220-Narandiba	Narandiba
353230-Natividade da	Natividade da Serra
353240-Nazar√© Paulis	Nazar√© Paulista
353250-Neves Paulist	Neves Paulista
353260-Nhandeara	Nhandeara
353280-Nova Alian√ßa	Nova Alian√ßa
353282-Nova Campina	Nova Campina
353290-Nova Europa	Nova Europa
353300-Nova Granada	Nova Granada
353320-Nova Independ	Nova Independ
353325-Novais	Novais
353340-Nova Odessa	Nova Odessa
353350-Novo Horizont	Novo Horizonte
353360-Nuporanga	Nuporanga
353390-Ol√≠mpia	Ol√≠mpia
353400-Onda Verde	Onda Verde
353410-Oriente	Oriente
353420-Orindi√∫va	Orindi√∫va
353430-Orl√¢ndia	Orl√¢ndia
353440-Osasco	Osasco
353460-Osvaldo Cruz	Osvaldo Cruz
353470-Ourinhos	Ourinhos
353475-Ouroeste	Ouroeste
353480-Ouro Verde-Sp	Ouro Verde Sp
353490-Pacaembu	Pacaembu
353500-Palestina-Sp	Palestina Sp
353510-Palmares Paul	Palmares Paul
353520-Palmeira D'Oe	Palmeira d'Oeste
353530-Palmital-Sp	Palmital Sp
353540-Panorama	Panorama
353550-Paragua√ßu Pau	Paragua√ßu Paulista
353560-Paraibuna	Paraibuna
353570-Para√≠so-Sp	Para√≠so Sp
353580-Paranapanema	Paranapanema
353600-Parapu√£	Parapu√£
353610-Pardinho	Pardinho
353620-Pariquera-A√ßu	Pariquera A√ßu
353630-Patroc√≠nio Pa	Patroc√≠nio Paulista
353640-Paulic√©ia	Paulic√©ia
353650-Paul√≠nia	Paul√≠nia
353670-Pederneiras	Pederneiras
353690-Pedran√≥polis	Pedran√≥polis
353700-Pedregulho	Pedregulho
353710-Pedreira	Pedreira
353715-Pedrinhas Pau	Pedrinhas Pau
353730-Pen√°polis	Pen√°polis
353740-Pereira Barre	Pereira Barre
353750-Pereiras	Pereiras
353760-Peru√≠be	Peru√≠be
353770-Piacatu	Piacatu
353780-Piedade	Piedade
353790-Pilar do Sul	Pilar do Sul
353800-Pindamonhanga	Pindamonhanga
353810-Pindorama	Pindorama
353820-Pinhalzinho-S	Pinhalzinho S
353830-Piquerobi	Piquerobi
353850-Piquete	Piquete
353860-Piracaia	Piracaia
353870-Piracicaba	Piracicaba
353880-Piraju	Piraju
353890-Piraju√≠	Piraju√≠
353900-Pirangi	Pirangi
353910-Pirapora do B	Pirapora do B
353920-Pirapozinho	Pirapozinho
353930-Pirassununga	Pirassununga
353950-Pitangueiras-	Pitangueiras
353960-Planalto-Sp	Planalto Sp
353970-Platina	Platina
353980-Po√°	Po√°
353990-Poloni	Poloni
354000-Pomp√©ia	Pomp√©ia
354020-Pontal	Pontal
354040-Populina	Populina
354050-Porangaba	Porangaba
354060-Porto Feliz	Porto Feliz
354070-Porto Ferreir	Porto Ferreira
354075-Potim	Potim
354080-Potirendaba	Potirendaba
354085-Pracinha	Pracinha
354090-Prad√≥polis	Prad√≥polis
354100-Praia Grande-	Praia Grande
354105-Prat√¢nia	Prat√¢nia
354120-Presidente Be	Presidente Bernardes
354130-Presidente Ep	Presidente Ep
354140-Presidente Pr	Presidente Prudente
354150-Presidente Ve	Presidente Venceslau
354160-Promiss√£o	Promiss√£o
354170-Quat√°	Quat√°
354180-Queiroz	Queiroz
354190-Queluz	Queluz
354200-Quintana	Quintana
354210-Rafard	Rafard
354220-Rancharia	Rancharia
354230-Reden√ß√£o da S	Reden√ß√£o da S
354240-Regente Feij√≥	Regente Feij√≥
354250-Regin√≥polis	Regin√≥polis
354260-Registro	Registro
354270-Restinga	Restinga
354290-Ribeir√£o Boni	Ribeir√£o Boni
354300-Ribeir√£o Bran	Ribeir√£o Bran
354310-Ribeir√£o Corr	Ribeir√£o Corrente
354320-Ribeir√£o do S	Ribeir√£o do S
354330-Ribeir√£o Pire	Ribeir√£o Pires
354340-Ribeir√£o Pret	Ribeir√£o Preto
354360-Rifaina	Rifaina
354370-Rinc√£o	Rinc√£o
354380-Rin√≥polis	Rin√≥polis
354390-Rio Claro-Sp	Rio Claro Sp
354400-Rio das Pedra	Rio das Pedras
354410-Rio Grande da	Rio Grande da Serra
354425-Rosana	Rosana
354430-Roseira	Roseira
354440-Rubi√°cea	Rubi√°cea
354450-Rubin√©ia	Rubin√©ia
354460-Sabino	Sabino
354480-Sales	Sales
354490-Sales Oliveir	Sales Oliveira
354500-Sales√≥polis	Sales√≥polis
354510-Salmour√£o	Salmour√£o
354515-Saltinho-Sp	Saltinho Sp
354520-Salto	Salto
354530-Salto de Pira	Salto de Pirapora
354540-Salto Grande	Salto Grande
354560-Santa Ad√©lia	Santa Ad√©lia
354570-Santa Alberti	Santa Alberti
354580-Santa B√°rbara	Santa B√°rbara d'Oeste
354600-Santa Branca	Santa Branca
354610-Santa Clara D	Santa Clara d'Oeste
354620-Santa Cruz da	Santa Cruz da Concei√ß√£o
354630-Santa Cruz da	Santa Cruz da Concei√ß√£o
354640-Santa Cruz do	Santa Cruz do Sul
354650-Santa Ernesti	Santa Ernestina
354660-Santa F√© do S	Santa F√© do Sul
354670-Santa Gertrud	Santa Gertrudes
354680-Santa Isabel-	Santa Isabel
354690-Santa L√∫cia-S	Santa L√∫cia S
354710-Santa Mercede	Santa Mercedes
354730-Santana de Pa	Santana de Parna√≠ba
354750-Santa Rita do	Santa Rita do Sapuca√≠
354760-Santa Rosa de	Santa Rosa de Viterbo
354765-Santa Salete	Santa Salete
354770-Santo Anast√°c	Santo Anast√°cio
354780-Santo Andr√©-S	Santo Andr√© S
354790-Santo Ant√¥nio	Santo Ant√¥nio de Jesus
354800-Santo Ant√¥nio	Santo Ant√¥nio de Jesus
354820-Santo Ant√¥nio	Santo Ant√¥nio de Jesus
354830-Santo Expedit	Santo Expedito do Sul
354840-Sant√≥polis do	Sant√≥polis do
354850-Santos	Santos
354860-S√£o Bento do	S√£o Bento do Sul
354870-S√£o Bernardo	S√£o Bernardo do Campo
354880-S√£o Caetano d	S√£o Caetano do Sul
354890-S√£o Carlos-Sp	S√£o Carlos Sp
354910-S√£o Jo√£o da B	S√£o Jo√£o da B
354940-S√£o Joaquim d	S√£o Joaquim da Barra
354970-S√£o Jos√© do R	S√£o Jos√© do Rio Preto
354980-S√£o Jos√© do R	S√£o Jos√© do Rio Preto
354990-S√£o Jos√© dos	S√£o Jos√© dos Campos
354995-S√£o Louren√ßo	S√£o Louren√ßo
355010-S√£o Manuel	S√£o Manuel
355020-S√£o Miguel Ar	S√£o Miguel Arcanjo
355030-S√£o Paulo	S√£o Paulo
355040-S√£o Pedro-Sp	S√£o Pedro Sp
355050-S√£o Pedro do	S√£o Pedro do Sul
355060-S√£o Roque	S√£o Roque
355070-S√£o Sebasti√£o	S√£o Sebasti√£o
355080-S√£o Sebasti√£o	S√£o Sebasti√£o
355090-S√£o Sim√£o-Sp	S√£o Sim√£o Sp
355100-S√£o Vicente-S	S√£o Vicente S
355110-Sarapu√≠	Sarapu√≠
355120-Sarutai√°	Sarutai√°
355130-Sebastian√≥pol	Sebastian√≥polis do Sul
355140-Serra Azul	Serra Azul de Minas
355150-Serrana	Serrana
355160-Serra Negra	Serra Negra
355170-Sert√£ozinho-S	Sert√£ozinho S
355180-Sete Barras	Sete Barras
355210-Socorro	Socorro
355220-Sorocaba	Sorocaba
355230-Sud Mennucci	Sud Mennucci
355240-Sumar√©	Sumar√©
355250-Suzano	Suzano
355255-Suzan√°polis	Suzan√°polis
355260-Tabapu√£	Tabapu√£
355270-Tabatinga-Sp	Tabatinga Sp
355280-Tabo√£o da Ser	Tabo√£o da Serra
355290-Taciba	Taciba
355300-Tagua√≠	Tagua√≠
355310-Taia√ßu	Taia√ßu
355320-Tai√∫va	Tai√∫va
355330-Tamba√∫	Tamba√∫
355340-Tanabi	Tanabi
355350-Tapira√≠-Sp	Tapira√≠ Sp
355360-Tapiratiba	Tapiratiba
355370-Taquaritinga	Taquaritinga
355380-Taquarituba	Taquarituba
355385-Taquariva√≠	Taquariva√≠
355390-Taraba√≠	Taraba√≠
355395-Tarum√£	Tarum√£
355400-Tatu√≠	Tatu√≠
355410-Taubat√©	Taubat√©
355430-Teodoro Sampa	Teodoro Sampaio
355440-Terra Roxa-Sp	Terra Roxa Sp
355450-Tiet√™	Tiet√™
355470-Torrinha	Torrinha
355480-Trememb√©	Trememb√©
355490-Tr√™s Fronteir	Tr√™s Fronteiras
355495-Tuiuti	Tuiuti
355500-Tup√£	Tup√£
355510-Tupi Paulista	Tupi Paulista
355535-Ubarana	Ubarana
355540-Ubatuba	Ubatuba
355560-Uchoa	Uchoa
355570-Uni√£o Paulist	Uni√£o Paulist
355580-Ur√¢nia	Ur√¢nia
355600-Urup√™s	Urup√™s
355610-Valentim Gent	Valentim Gentil
355620-Valinhos	Valinhos
355630-Valpara√≠so	Valpara√≠so
355635-Vargem-Sp	Vargem Sp
355640-Vargem Grande	Vargem Grande Paulista
355645-Vargem Grande	Vargem Grande Paulista
355650-V√°rzea Paulis	V√°rzea Paulista
355660-Vera Cruz-Sp	Vera Cruz Sp
355670-Vinhedo	Vinhedo
355680-Viradouro	Viradouro
355690-Vista Alegre	Vista Alegre
355700-Votorantim	Votorantim
355710-Votuporanga	Votuporanga
355720-Chavantes	Chavantes
355730-Estiva Gerbi	Estiva Gerbi
410020-Adrian√≥polis	Adrian√≥polis
410030-Agudos do Sul	Agudos do Sul
410040-Almirante Tam	Almirante Tamandar√©
410060-Alto Paran√°	Alto Paran√°
410090-Amapor√£	Amapor√£
410100-Amp√©re	Amp√©re
410105-Anahy	Anahy
410110-Andir√°	Andir√°
410120-Antonina	Antonina
410140-Apucarana	Apucarana
410150-Arapongas	Arapongas
410160-Arapoti	Arapoti
410170-Araruna-Pr	Araruna Pr
410180-Arauc√°ria	Arauc√°ria
410190-Assa√≠	Assa√≠
410200-Assis Chateau	Assis Chateau
410210-Astorga	Astorga
410230-Balsa Nova	Balsa Nova
410240-Bandeirantes-	Bandeirantes
410250-Barbosa Ferra	Barbosa Ferraz
410280-Bela Vista do	Bela Vista do Para√≠so
410290-Bituruna	Bituruna
410304-Boa Ventura d	Boa Ventura de S√£o Roque
410310-Bocai√∫va do S	Bocai√∫va do Sul
410315-Bom Jesus do	Bom Jesus do
410320-Bom Sucesso-P	Bom Sucesso P
410322-Bom Sucesso d	Bom Sucesso do Sul
410335-Braganey	Braganey
410337-Brasil√¢ndia d	Brasil√¢ndia do Sul
410345-Cafel√¢ndia-Pr	Cafel√¢ndia Pr
410350-Calif√≥rnia	Calif√≥rnia
410360-Cambar√°	Cambar√°
410370-Camb√©	Camb√©
410380-Cambira	Cambira
410390-Campina da La	Campina da La
410400-Campina Grand	Campina Grande
410410-Campo do Tene	Campo do Tenente
410420-Campo Largo	Campo Largo
410425-Campo Magro	Campo Magro
410430-Campo Mour√£o	Campo Mour√£o
410442-Cand√≥i	Cand√≥i
410445-Cantagalo-Pr	Cantagalo Pr
410450-Capanema-Pr	Capanema Pr
410460-Capit√£o Le√¥ni	Capit√£o Le√¥nidas Marques
410465-Carambe√≠	Carambe√≠
410470-Carl√≥polis	Carl√≥polis
410480-Cascavel-Pr	Cascavel Pr
410490-Castro	Castro
410500-Catanduvas-Pr	Catanduvas Pr
410520-Cerro Azul	Cerro Azul
410530-C√©u Azul	C√©u Azul
410540-Chopinzinho	Chopinzinho
410550-Cianorte	Cianorte
410560-Cidade Ga√∫cha	Cidade Ga√∫cha
410570-Clevel√¢ndia	Clevel√¢ndia
410580-Colombo	Colombo
410590-Colorado-Pr	Colorado Pr
410600-Congonhinhas	Congonhinhas
410630-Corb√©lia	Corb√©lia
410640-Corn√©lio Proc	Corn√©lio Proc√≥pio
410645-Coronel Domin	Coronel Domin
410650-Coronel Vivid	Coronel Vivida
410660-Cruzeiro do O	Cruzeiro do Oeste
410670-Cruzeiro do S	Cruzeiro do Sul
410690-Curitiba	Curitiba
410700-Curi√∫va	Curi√∫va
410710-Diamante do N	Diamante do Norte
410720-Dois Vizinhos	Dois Vizinhos
410725-Douradina-Pr	Douradina Pr
410730-Doutor Camarg	Doutor Camargo
410750-Engenheiro Be	Engenheiro Be
410753-Entre Rios do	Entre Rios do Oeste
410760-Faxinal	Faxinal
410765-Fazenda Rio G	Fazenda Rio Grande
410780-Flora√≠	Flora√≠
410785-Flor da Serra	Flor da Serra
410790-Floresta-Pr	Floresta Pr
410800-Florest√≥polis	Florest√≥polis
410820-Formosa do Oe	Formosa do Oe
410830-Foz do Igua√ßu	Foz do Igua√ßu
410840-Francisco Bel	Francisco Bel
410845-Foz do Jord√£o	Foz do Jord√£o
410850-General Carne	General Carneiro
410860-Goioer√™	Goioer√™
410880-Gua√≠ra-Pr	Gua√≠ra Pr
410890-Guaira√ß√°	Guaira√ß√°
410930-Guarania√ßu	Guarania√ßu
410940-Guarapuava	Guarapuava
410960-Guaratuba	Guaratuba
410965-Hon√≥rio Serpa	Hon√≥rio Serpa
410970-Ibaiti	Ibaiti
410975-Ibema	Ibema
410980-Ibipor√£	Ibipor√£
411007-Imba√∫	Imba√∫
411010-Imbituva	Imbituva
411020-In√°cio Martin	In√°cio Martin
411040-Indian√≥polis-	Indian√≥polis
411050-Ipiranga	Ipiranga
411060-Ipor√£	Ipor√£
411070-Irati-Pr	Irati Pr
411080-Iretama	Iretama
411095-Itaipul√¢ndia	Itaipul√¢ndia
411100-Itambarac√°	Itambarac√°
411120-Itapejara D'O	Itapejara d'Oeste
411125-Itaperu√ßu	Itaperu√ßu
411140-Iva√≠	Iva√≠
411150-Ivaipor√£	Ivaipor√£
411155-Ivat√©	Ivat√©
411160-Ivatuba	Ivatuba
411180-Jacarezinho	Jacarezinho
411190-Jaguapit√£	Jaguapit√£
411200-Jaguaria√≠va	Jaguaria√≠va
411210-Jandaia do Su	Jandaia do Sul
411240-Japur√°-Pr	Japur√° Pr
411250-Jardim Alegre	Jardim Alegre
411260-Jardim Olinda	Jardim Olinda
411270-Jataizinho	Jataizinho
411275-Jesu√≠tas	Jesu√≠tas
411280-Joaquim T√°vor	Joaquim T√°vora
411290-Jundia√≠ do Su	Jundia√≠ do Su
411300-Jussara-Pr	Jussara Pr
411320-Lapa	Lapa
411330-Laranjeiras d	Laranjeiras do Sul
411345-Lindoeste	Lindoeste
411350-Loanda	Loanda
411360-Lobato	Lobato
411370-Londrina	Londrina
411375-Lunardelli	Lunardelli
411390-Mallet	Mallet
411400-Mambor√™	Mambor√™
411410-Mandagua√ßu	Mandagua√ßu
411420-Mandaguari	Mandaguari
411430-Mandirituba	Mandirituba
411435-Manfrin√≥polis	Manfrin√≥polis
411450-Manoel Ribas	Manoel Ribas
411460-Marechal C√¢nd	Marechal C√¢ndido Rondon
411480-Marialva	Marialva
411490-Maril√¢ndia do	Maril√¢ndia do Sul
411520-Maring√°	Maring√°
411530-Mari√≥polis	Mari√≥polis
411535-Marip√°	Marip√°
411540-Marmeleiro	Marmeleiro
411560-Matel√¢ndia	Matel√¢ndia
411570-Matinhos	Matinhos
411580-Medianeira	Medianeira
411585-Mercedes	Mercedes
411590-Mirador-Pr	Mirador Pr
411605-Missal	Missal
411610-Moreira Sales	Moreira Sales
411620-Morretes	Morretes
411670-Nova Aurora-P	Nova Aurora P
411690-Nova Esperan√ß	Nova Esperan√ß
411695-Nova Esperan√ß	Nova Esperan√ß
411700-Nova F√°tima-P	Nova F√°tima P
411705-Nova Laranjei	Nova Laranjei
411710-Nova Londrina	Nova Londrina
411720-Nova Ol√≠mpia-	Nova Ol√≠mpia
411722-Nova Santa Ro	Nova Santa Ro
411725-Nova Prata do	Nova Prata do Igua√ßu
411727-Nova Tebas	Nova Tebas
411730-Ortigueira	Ortigueira
411745-Ouro Verde do	Ouro Verde do Oeste
411750-Pai√ßandu	Pai√ßandu
411760-Palmas-Pr	Palmas Pr
411770-Palmeira-Pr	Palmeira Pr
411790-Palotina	Palotina
411800-Para√≠so do No	Para√≠so do Norte
411810-Paranacity	Paranacity
411820-Paranagu√°	Paranagu√°
411830-Paranapoema	Paranapoema
411840-Paranava√≠	Paranava√≠
411845-Pato Bragado	Pato Bragado
411850-Pato Branco	Pato Branco
411860-Paula Freitas	Paula Freitas
411880-Peabiru	Peabiru
411885-Perobal	Perobal
411890-P√©rola	P√©rola
411900-P√©rola D'Oest	P√©rola d'Oeste
411910-Pi√™n	Pi√™n
411915-Pinhais	Pinhais
411930-Pinh√£o-Pr	Pinh√£o Pr
411940-Pira√≠ do Sul	Pira√≠ do Sul
411950-Piraquara	Piraquara
411960-Pitanga	Pitanga
411970-Planaltina do	Planaltina do
411980-Planalto-Pr	Planalto Pr
411990-Ponta Grossa	Ponta Grossa
411995-Pontal do Par	Pontal do Par
412010-Porto Amazona	Porto Amazonas
412020-Porto Rico	Porto Rico
412030-Porto Vit√≥ria	Porto Vit√≥ria
412035-Pranchita	Pranchita
412050-Primeiro de M	Primeiro de Maio
412060-Prudent√≥polis	Prudent√≥polis
412065-Quarto Centen	Quarto Centen√°rio
412070-Quatigu√°	Quatigu√°
412080-Quatro Barras	Quatro Barras
412085-Quatro Pontes	Quatro Pontes
412090-Quedas do Igu	Quedas do Igua√ßu
412120-Quitandinha	Quitandinha
412140-Realeza	Realeza
412150-Rebou√ßas	Rebou√ßas
412160-Renascen√ßa	Renascen√ßa
412170-Reserva	Reserva
412175-Reserva do Ig	Reserva do Igua√ßu
412180-Ribeir√£o Clar	Ribeir√£o Claro
412190-Ribeir√£o do P	Ribeir√£o do Pinhal
412200-Rio Azul	Rio Azul
412215-Rio Bonito do	Rio Bonito do Igua√ßu
412220-Rio Branco do	Rio Branco do Sul
412230-Rio Negro-Pr	Rio Negro Pr
412240-Rol√¢ndia	Rol√¢ndia
412260-Rondon	Rondon
412270-Sab√°udia	Sab√°udia
412280-Salgado Filho	Salgado Filho
412300-Salto do Lont	Salto do Lontra
412310-Santa Am√©lia	Santa Am√©lia
412320-Santa Cec√≠lia	Santa Cec√≠lia
412330-Santa Cruz de	Santa Cruz de
412340-Santa F√©	Santa F√© do Araguaia
412350-Santa Helena-	Santa Helena
412370-Santa Isabel	Santa Isabel
412380-Santa Izabel	Santa Izabel
412390-Santa Mariana	Santa Mariana
412395-Santa M√¥nica	Santa M√¥nica
412402-Santa Tereza	Santa Tereza
412405-Santa Terezin	Santa Terezinha de Itaipu
412410-Santo Ant√¥nio	Santo Ant√¥nio de Jesus
412420-Santo Ant√¥nio	Santo Ant√¥nio de Jesus
412440-Santo Ant√¥nio	Santo Ant√¥nio de Jesus
412450-Santo In√°cio	Santo In√°cio
412460-S√£o Carlos do	S√£o Carlos do
412470-S√£o Jer√¥nimo	S√£o Jer√¥nimo da Serra
412480-S√£o Jo√£o-Pr	S√£o Jo√£o Pr
412500-S√£o Jo√£o do I	S√£o Jo√£o do Itaperi√∫
412510-S√£o Jo√£o do T	S√£o Jo√£o do Triunfo
412520-S√£o Jorge D'O	S√£o Jorge D'Oeste
412530-S√£o Jorge do	S√£o Jorge do Patroc√≠nio
412535-S√£o Jorge do	S√£o Jorge do Patroc√≠nio
412550-S√£o Jos√© dos	S√£o Jos√© dos Campos
412560-S√£o Mateus do	S√£o Mateus do Sul
412570-S√£o Miguel do	S√£o Miguel do Araguaia
412580-S√£o Pedro do	S√£o Pedro do Sul
412610-S√£o Tom√©-Pr	S√£o Tom√© Pr
412620-Sapopema	Sapopema
412625-Sarandi-Pr	Sarandi Pr
412630-Seng√©s	Seng√©s
412640-Sertaneja	Sertaneja
412660-Siqueira Camp	Siqueira Camp
412665-Sulina	Sulina
412667-Tamarana	Tamarana
412670-Tamboara	Tamboara
412680-Tapejara-Pr	Tapejara Pr
412700-Teixeira Soar	Teixeira Soares
412710-Tel√™maco Borb	Tel√™maco Borba
412720-Terra Boa	Terra Boa
412730-Terra Rica	Terra Rica
412740-Terra Roxa-Pr	Terra Roxa Pr
412750-Tibagi	Tibagi
412760-Tijucas do Su	Tijucas do Sul
412770-Toledo-Pr	Toledo Pr
412780-Tomazina	Tomazina
412785-Tr√™s Barras d	Tr√™s Barras do Paran√°
412788-Tunas do Para	Tunas do Paran√°
412790-Tuneiras do O	Tuneiras do O
412796-Turvo-Pr	Turvo Pr
412800-Ubirat√£	Ubirat√£
412810-Umuarama	Umuarama
412820-Uni√£o da Vit√≥	Uni√£o da Vit√≥ria
412840-Ura√≠	Ura√≠
412850-Wenceslau Bra	Wenceslau Bra
412853-Ventania	Ventania
412855-Vera Cruz do	Vera Cruz do
412860-Ver√™	Ver√™
412862-Vila Alta	Vila Alta
412870-Vitorino	Vitorino
420010-Abelardo Luz	Abelardo Luz
420020-Agrol√¢ndia	Agrol√¢ndia
420040-√Ågua Doce	√Ågua Doce
420055-√Åguas Frias	√Åguas Frias
420060-√Åguas Mornas	√Åguas Mornas
420075-Alto Bela Vis	Alto Bela Vista
420080-Anchieta-Sc	Anchieta Sc
420100-Anita Garibal	Anita Garibal
420110-Anit√°polis	Anit√°polis
420120-Ant√¥nio Carlo	Ant√¥nio Carlos
420125-Api√∫na	Api√∫na
420127-Arabut√£	Arabut√£
420130-Araquari	Araquari
420140-Ararangu√°	Ararangu√°
420150-Armaz√©m	Armaz√©m
420165-Arvoredo	Arvoredo
420170-Ascurra	Ascurra
420190-Aurora-Sc	Aurora Sc
420195-Balne√°rio Arr	Balne√°rio Arr
420200-Balne√°rio Cam	Balne√°rio Cambori√∫
420205-Balne√°rio Bar	Balne√°rio Bar
420207-Balne√°rio Gai	Balne√°rio Gai
420210-Barra Velha	Barra Velha
420220-Benedito Novo	Benedito Novo
420230-Bigua√ßu	Bigua√ßu
420240-Blumenau	Blumenau
420245-Bombinhas	Bombinhas
420250-Bom Jardim da	Bom Jardim da Serra
420253-Bom Jesus-Sc	Bom Jesus Sc
420260-Bom Retiro	Bom Retiro
420270-Botuver√°	Botuver√°
420280-Bra√ßo do Nort	Bra√ßo do Norte
420285-Bra√ßo do Trom	Bra√ßo do Trom
420290-Brusque	Brusque
420300-Ca√ßador	Ca√ßador
420310-Caibi	Caibi
420320-Cambori√∫	Cambori√∫
420330-Campo Alegre-	Campo Alegre
420340-Campo Belo do	Campo Belo do Sul
420350-Campo Er√™	Campo Er√™
420360-Campos Novos	Campos Novos
420370-Canelinha	Canelinha
420380-Canoinhas	Canoinhas
420390-Capinzal	Capinzal
420395-Capivari de B	Capivari de Baixo
420400-Catanduvas-Sc	Catanduvas Sc
420417-Cerro Negro	Cerro Negro
420420-Chapec√≥	Chapec√≥
420425-Cocal do Sul	Cocal do Sul
420430-Conc√≥rdia	Conc√≥rdia
420435-Cordilheira A	Cordilheira Alta
420440-Coronel Freit	Coronel Freit
420445-Coronel Marti	Coronel Martins
420450-Corup√°	Corup√°
420455-Correia Pinto	Correia Pinto
420460-Crici√∫ma	Crici√∫ma
420470-Cunha Por√£	Cunha Por√£
420480-Curitibanos	Curitibanos
420500-Dion√≠sio Cerq	Dion√≠sio Cerqueira
420515-Doutor Pedrin	Doutor Pedrinho
420520-Erval Velho	Erval Velho
420530-Faxinal dos G	Faxinal dos Guedes
420535-Flor do Sert√£	Flor do Sert√£o
420540-Florian√≥polis	Florian√≥polis
420543-Formosa do Su	Formosa do Sul
420545-Forquilhinha	Forquilhinha
420550-Fraiburgo	Fraiburgo
420570-Garopaba	Garopaba
420580-Garuva	Garuva
420590-Gaspar	Gaspar
420600-Governador Ce	Governador Ce
420610-Gr√£o Par√°	Gr√£o Par√°
420620-Gravatal	Gravatal
420630-Guabiruba	Guabiruba
420640-Guaraciaba-Sc	Guaraciaba Sc
420650-Guaramirim	Guaramirim
420660-Guaruj√° do Su	Guaruj√° do Sul
420665-Guatambu	Guatambu
420670-Herval D'Oest	Herval d'Oeste
420675-Ibiam	Ibiam
420690-Ibirama	Ibirama
420700-I√ßara	I√ßara
420710-Ilhota	Ilhota
420720-Imaru√≠	Imaru√≠
420730-Imbituba	Imbituba
420740-Imbuia	Imbuia
420750-Indaial	Indaial
420757-Iomer√™	Iomer√™
420765-Ipor√£ do Oest	Ipor√£ do Oeste
420770-Ipumirim	Ipumirim
420775-Iraceminha	Iraceminha
420780-Irani	Irani
420800-It√°	It√°
420810-Itai√≥polis	Itai√≥polis
420820-Itaja√≠	Itaja√≠
420830-Itapema	Itapema
420840-Itapiranga-Sc	Itapiranga Sc
420845-Itapo√°	Itapo√°
420850-Ituporanga	Ituporanga
420860-Jabor√°	Jabor√°
420870-Jacinto Macha	Jacinto Machado
420880-Jaguaruna	Jaguaruna
420890-Jaragu√° do Su	Jaragu√° do Sul
420900-Joa√ßaba	Joa√ßaba
420910-Joinville	Joinville
420915-Jos√© Boiteux	Jos√© Boiteux
420917-Jupi√°	Jupi√°
420930-Lages	Lages
420940-Laguna	Laguna
420950-Laurentino	Laurentino
420960-Lauro Muller	Lauro Muller
420970-Lebon R√©gis	Lebon R√©gis
420985-Lind√≥ia do Su	Lind√≥ia do Sul
420990-Lontras	Lontras
421000-Luiz Alves	Luiz Alves
421003-Luzerna	Luzerna
421010-Mafra	Mafra
421020-Major Gercino	Major Gercino
421030-Major Vieira	Major Vieira
421040-Maracaj√°	Maracaj√°
421050-Maravilha-Sc	Maravilha Sc
421055-Marema	Marema
421060-Massaranduba-	Massaranduba
421080-Meleiro	Meleiro
421085-Mirim Doce	Mirim Doce
421090-Modelo	Modelo
421100-Monda√≠	Monda√≠
421105-Monte Carlo	Monte Carlo
421120-Morro da Fuma	Morro da Fuma√ßa
421130-Navegantes	Navegantes
421140-Nova Erechim	Nova Erechim
421145-Nova Itaberab	Nova Itaberaba
421150-Nova Trento	Nova Trento
421160-Nova Veneza-S	Nova Veneza S
421165-Novo Horizont	Novo Horizonte
421170-Orleans	Orleans
421175-Otac√≠lio Cost	Otac√≠lio Costa
421190-Palho√ßa	Palho√ßa
421200-Palma Sola	Palma Sola
421205-Palmeira-Sc	Palmeira Sc
421210-Palmitos	Palmitos
421220-Papanduva	Papanduva
421223-Para√≠so-Sc	Para√≠so Sc
421227-Passos Maia	Passos Maia
421230-Paulo Lopes	Paulo Lopes
421240-Pedras Grande	Pedras Grande
421250-Penha	Penha
421260-Peritiba	Peritiba
421280-Pi√ßarras	Balne√°rio Pi√ßarras
421290-Pinhalzinho-S	Pinhalzinho S
421300-Pinheiro Pret	Pinheiro Preto
421310-Piratuba	Piratuba
421315-Planalto Aleg	Planalto Aleg
421320-Pomerode	Pomerode
421340-Ponte Serrada	Ponte Serrada
421350-Porto Belo	Porto Belo
421360-Porto Uni√£o	Porto Uni√£o
421370-Pouso Redondo	Pouso Redondo
421380-Praia Grande-	Praia Grande
421400-Presidente Ge	Presidente Get√∫lio
421410-Presidente Ne	Presidente Ne
421415-Princesa	Princesa
421420-Quilombo	Quilombo
421440-Rio das Antas	Rio das Antas
421450-Rio do Campo	Rio do Campo
421470-Rio dos Cedro	Rio dos Cedros
421480-Rio do Sul	Rio do Sul
421490-Rio Fortuna	Rio Fortuna
421500-Rio Negrinho	Rio Negrinho
421505-Rio Rufino	Rio Rufino
421510-Rodeio	Rodeio
421530-Salete	Salete
421540-Salto Veloso	Salto Veloso
421545-Sang√£o	Sang√£o
421550-Santa Cec√≠lia	Santa Cec√≠lia
421560-Santa Rosa de	Santa Rosa de Viterbo
421565-Santa Rosa do	Santa Rosa do
421570-Santo Amaro d	Santo Amaro da Imperatriz
421580-S√£o Bento do	S√£o Bento do Sul
421600-S√£o Carlos-Sc	S√£o Carlos Sc
421605-S√£o Crist√≥v√£o	S√£o Crist√≥v√£o
421610-S√£o Domingos-	S√£o Domingos
421620-S√£o Francisco	S√£o Francisco do Sul
421625-S√£o Jo√£o do O	S√£o Jo√£o do Oeste
421630-S√£o Jo√£o Bati	S√£o Jo√£o Batista
421635-S√£o Jo√£o do I	S√£o Jo√£o do Itaperi√∫
421650-S√£o Joaquim	S√£o Joaquim
421660-S√£o Jos√©	S√£o Jos√©
421690-S√£o Louren√ßo	S√£o Louren√ßo
421700-S√£o Ludgero	S√£o Ludgero
421710-S√£o Martinho-	S√£o Martinho
421720-S√£o Miguel D'	S√£o Miguel do Igua√ßu
421725-S√£o Pedro de	S√£o Pedro da Aldeia
421730-Saudades	Saudades
421740-Schroeder	Schroeder
421750-Seara	Seara
421755-Serra Alta	Serra Alta
421760-Sider√≥polis	Sider√≥polis
421770-Sombrio	Sombrio
421775-Sul Brasil	Sul Brasil
421780-Tai√≥	Tai√≥
421790-Tangar√°-Sc	Tangar√° Sc
421800-Tijucas	Tijucas
421810-Timb√© do Sul	Timb√© do Sul
421820-Timb√≥	Timb√≥
421825-Timb√≥ Grande	Timb√≥ Grande
421830-Tr√™s Barras	Tr√™s Barras
421835-Treviso	Treviso
421840-Treze de Maio	Treze de Maio
421850-Treze T√≠lias	Treze T√≠lias
421860-Trombudo Cent	Trombudo Cent
421870-Tubar√£o	Tubar√£o
421875-Tun√°polis	Tun√°polis
421880-Turvo-Sc	Turvo Sc
421885-Uni√£o do Oest	Uni√£o do Oeste
421890-Urubici	Urubici
421900-Urussanga	Urussanga
421910-Varge√£o	Varge√£o
421917-Vargem Bonita	Vargem Bonita
421920-Vidal Ramos	Vidal Ramos
421930-Videira	Videira
421940-Witmarsum	Witmarsum
421950-Xanxer√™	Xanxer√™
421970-Xaxim	Xaxim
430003-Acegu√°	Acegu√°
430010-Agudo	Agudo
430030-Alecrim	Alecrim
430040-Alegrete	Alegrete
430045-Alegria	Alegria
430047-Almirante Tam	Almirante Tamandar√©
430057-Alto Feliz	Alto Feliz
430060-Alvorada-Rs	Alvorada Rs
430070-Anta Gorda	Anta Gorda
430080-Ant√¥nio Prado	Ant√¥nio Prado
430087-Araric√°	Araric√°
430090-Aratiba	Aratiba
430100-Arroio do Mei	Arroio do Meio
430105-Arroio do Sal	Arroio do Sal
430110-Arroio dos Ra	Arroio dos Ra
430120-Arroio do Tig	Arroio do Tigre
430130-Arroio Grande	Arroio Grande
430140-Arvorezinha	Arvorezinha
430150-Augusto Pesta	Augusto Pestana
430160-Bag√©	Bag√©
430163-Balne√°rio Pin	Balne√°rio Pin
430165-Bar√£o	Bar√£o
430180-Barrac√£o-Rs	Barrac√£o Rs
430190-Barra do Ribe	Barra do Ribeiro
430210-Bento Gon√ßalv	Bento Gon√ßalves
430223-Boa Vista do	Boa Vista do Sul
430230-Bom Jesus-Rs	Bom Jesus Rs
430235-Bom Princ√≠pio	Bom Princ√≠pio
430240-Bom Retiro do	Bom Retiro do Sul
430245-Boqueir√£o do	Boqueir√£o do Le√£o
430258-Bozano	Bozano
430265-Brochier	Brochier
430270-Buti√°	Buti√°
430280-Ca√ßapava do S	Ca√ßapava do Sul
430290-Cacequi	Cacequi
430300-Cachoeira do	Cachoeira do Sul
430310-Cachoeirinha-	Cachoeirinha
430340-Cai√ßara-Rs	Cai√ßara Rs
430350-Camaqu√£	Camaqu√£
430360-Cambar√° do Su	Cambar√° do Su
430370-Campina das M	Campina das M
430380-Campinas do S	Campinas do S
430390-Campo Bom	Campo Bom
430410-Campos Borges	Campos Borges
430420-Candel√°ria	Candel√°ria
430440-Canela	Canela
430450-Cangu√ßu	Cangu√ßu
430460-Canoas	Canoas
430462-Cap√£o Bonito	Cap√£o Bonito
430463-Cap√£o da Cano	Cap√£o da Cano
430466-Cap√£o do Le√£o	Cap√£o do Le√£o
430467-Capivari do S	Capivari do S
430468-Capela de San	Capela de Santana
430469-Capit√£o	Capit√£o
430470-Carazinho	Carazinho
430471-Cara√£	Cara√£
430480-Carlos Barbos	Carlos Barbosa
430490-Casca	Casca
430500-Catu√≠pe	Catu√≠pe
430510-Caxias do Sul	Caxias do Sul
430520-Cerro Largo	Cerro Largo
430530-Chapada	Chapada
430535-Charqueadas	Charqueadas
430543-Chu√≠	Chu√≠
430545-Cidreira	Cidreira
430570-Condor	Condor
430587-Coronel Barro	Coronel Barros
430590-Coronel Bicac	Coronel Bicaco
430593-Coronel Pilar	Coronel Pilar
430595-Cotipor√£	Cotipor√£
430597-Coxilha	Coxilha
430600-Crissiumal	Crissiumal
430605-Cristal	Cristal
430607-Cristal do Su	Cristal do Sul
430610-Cruz Alta	Cruz Alta
430620-Cruzeiro do S	Cruzeiro do Sul
430640-Dois Irm√£os	Dois Irm√£os
430645-Dois Lajeados	Dois Lajeados
430660-Dom Pedrito	Dom Pedrito
430670-Dona Francisc	Dona Francisca
430673-Doutor Maur√≠c	Doutor Maur√≠cio Cardoso
430676-Eldorado do S	Eldorado do Sul
430680-Encantado	Encantado
430690-Encruzilhada	Encruzilhada
430693-Entre-Iju√≠s	Entre Iju√≠s
430695-Entre Rios do	Entre Rios do Oeste
430700-Erechim	Erechim
430705-Ernestina	Ernestina
430730-Erval Seco	Erval Seco
430750-Espumoso	Espumoso
430755-Esta√ß√£o	Esta√ß√£o
430760-Est√¢ncia Velh	Est√¢ncia Velha
430770-Esteio	Esteio
430780-Estrela	Estrela
430790-Farroupilha	Farroupilha
430800-Faxinal do So	Faxinal do So
430807-Fazenda Vilan	Fazenda Vilan
430810-Feliz	Feliz
430820-Flores da Cun	Flores da Cunha
430850-Frederico Wes	Frederico Westphalen
430860-Garibaldi	Garibaldi
430880-General C√¢mar	General C√¢mara
430890-Get√∫lio Varga	Get√∫lio Vargas
430900-Giru√°	Giru√°
430905-Glorinha	Glorinha
430910-Gramado	Gramado
430920-Gravata√≠	Gravata√≠
430925-Guabiju	Guabiju
430930-Gua√≠ba	Gua√≠ba
430940-Guapor√©	Guapor√©
430955-Harmonia	Harmonia
430957-Herveiras	Herveiras
430960-Horizontina	Horizontina
430965-Hulha Negra	Hulha Negra
430990-Ibiraiaras	Ibiraiaras
430995-Ibirapuit√£	Ibirapuit√£
431000-Ibirub√°	Ibirub√°
431010-Igrejinha	Igrejinha
431020-Iju√≠	Iju√≠
431033-Imb√©	Imb√©
431036-Imigrante	Imigrante
431060-Itaqui	Itaqui
431080-Ivoti	Ivoti
431090-Jacutinga-Rs	Jacutinga Rs
431100-Jaguar√£o	Jaguar√£o
431110-Jaguari	Jaguari
431120-J√∫lio de Cast	J√∫lio de Cast
431130-Lagoa Vermelh	Lagoa Vermelha
431140-Lajeado-Rs	Lajeado Rs
431142-Lajeado do Bu	Lajeado do Bu
431162-Lindolfo Coll	Lindolfo Coll
431177-Maquin√©	Maquin√©
431179-Marat√°	Marat√°
431180-Marau	Marau
431215-Mato Leit√£o	Mato Leit√£o
431220-Maximiliano d	Maximiliano de Almeida
431225-Minas do Le√£o	Minas do Le√£o
431230-Miragua√≠	Miragua√≠
431240-Montenegro	Montenegro
431247-Morro Reuter	Morro Reuter
431260-Mu√ßum	Mu√ßum
431265-N√£o-Me-Toque	N√£o Me Toque
431267-Nicolau Vergu	Nicolau Vergueiro
431270-Nonoai	Nonoai
431280-Nova Ara√ß√°	Nova Ara√ß√°
431290-Nova Bassano	Nova Bassano
431300-Nova Br√©scia	Nova Br√©scia
431303-Nova Esperan√ß	Nova Esperan√ß
431306-Nova Hartz	Nova Hartz
431310-Nova Palma	Nova Palma
431320-Nova Petr√≥pol	Nova Petr√≥polis
431330-Nova Prata	Nova Prata
431335-Nova Roma do	Nova Roma do Sul
431337-Nova Santa Ri	Nova Santa Rita
431339-Novo Cabrais	Novo Cabrais
431340-Novo Hamburgo	Novo Hamburgo
431350-Os√≥rio	Os√≥rio
431365-Palmares do S	Palmares do Sul
431370-Palmeira das	Palmeira das Miss√µes
431390-Panambi	Panambi
431395-P√¢ntano Grand	P√¢ntano Grande
431400-Para√≠	Para√≠
431403-Pareci Novo	Pareci Novo
431405-Parob√©	Parob√©
431407-Passo do Sobr	Passo do Sobrado
431410-Passo Fundo	Passo Fundo
431413-Paulo Bento	Paulo Bento
431415-Paverama	Paverama
431420-Pedro Os√≥rio	Pedro Os√≥rio
431440-Pelotas	Pelotas
431442-Picada Caf√©	Picada Caf√©
431450-Pinheiro Mach	Pinheiro Mach
431460-Piratini	Piratini
431470-Planalto-Rs	Planalto Rs
431475-Po√ßo das Anta	Po√ßo das Antas
431480-Port√£o	Port√£o
431490-Porto Alegre	Porto Alegre
431513-Pouso Novo	Pouso Novo
431514-Presidente Lu	Presidente Lucena
431530-Quara√≠	Quara√≠
431550-Restinga Seca	Restinga Seca
431560-Rio Grande	Rio Grande
431570-Rio Pardo	Rio Pardo
431600-Rolante	Rolante
431640-Ros√°rio do Su	Ros√°rio do Su
431643-Saldanha Mari	Saldanha Marinho
431645-Salto do Jacu	Salto do Jacu√≠
431650-Salvador do S	Salvador do Sul
431660-Sananduva	Sananduva
431675-Santa Clara d	Santa Clara d'Oeste
431680-Santa Cruz do	Santa Cruz do Sul
431690-Santa Maria-R	Santa Maria R
431695-Santa Maria d	Santa Maria da Vit√≥ria
431710-Santana do Li	Santana do Livramento
431720-Santa Rosa	Santa Rosa
431730-Santa Vit√≥ria	Santa Vit√≥ria
431740-Santiago	Santiago
431750-Santo √Çngelo	Santo √Çngelo
431760-Santo Ant√¥nio	Santo Ant√¥nio de Jesus
431775-Santo Ant√¥nio	Santo Ant√¥nio de Jesus
431780-Santo Augusto	Santo Augusto
431790-Santo Cristo	Santo Cristo
431800-S√£o Borja	S√£o Borja
431805-S√£o Domingos	S√£o Domingos
431820-S√£o Francisco	S√£o Francisco do Sul
431830-S√£o Gabriel-R	S√£o Gabriel R
431840-S√£o Jer√¥nimo	S√£o Jer√¥nimo da Serra
431843-S√£o Jo√£o do P	S√£o Jo√£o do P
431844-S√£o Jorge	S√£o Jorge D'Oeste
431848-S√£o Jos√© do H	S√£o Jos√© do Herval
431849-S√£o Jos√© do I	S√£o Jos√© do Inhacor√°
431850-S√£o Jos√© do N	S√£o Jos√© do Norte
431860-S√£o Jos√© do O	S√£o Jos√© do Ouro
431861-S√£o Jos√© do S	S√£o Jos√© do Sabugi
431862-S√£o Jos√© dos	S√£o Jos√© dos Campos
431870-S√£o Leopoldo	S√£o Leopoldo
431880-S√£o Louren√ßo	S√£o Louren√ßo
431890-S√£o Luiz Gonz	S√£o Luiz Gonzaga
431900-S√£o Marcos	S√£o Marcos
431910-S√£o Martinho-	S√£o Martinho
431935-S√£o Pedro da	S√£o Pedro da √Ågua Branca
431937-S√£o Pedro do	S√£o Pedro do Sul
431950-S√£o Sebasti√£o	S√£o Sebasti√£o
431960-S√£o Sep√©	S√£o Sep√©
431975-S√£o Vendelino	S√£o Vendelino
431980-S√£o Vicente d	S√£o Vicente de Minas
431990-Sapiranga	Sapiranga
432000-Sapucaia do S	Sapucaia do Sul
432010-Sarandi-Rs	Sarandi Rs
432020-Seberi	Seberi
432026-Segredo	Segredo
432030-Selbach	Selbach
432035-Sentinela do	Sentinela do
432040-Serafina Corr	Serafina Corr√™a
432050-Sert√£o	Sert√£o
432055-Sert√£o Santan	Sert√£o Santan
432067-Sinimbu	Sinimbu
432080-Soledade-Rs	Soledade Rs
432090-Tapejara-Rs	Tapejara Rs
432100-Tapera	Tapera
432120-Taquara	Taquara
432130-Taquari	Taquari
432140-Tenente Porte	Tenente Portela
432143-Terra de Arei	Terra de Areia
432145-Teut√¥nia	Teut√¥nia
432147-Tiradentes do	Tiradentes do Sul
432150-Torres	Torres
432160-Tramanda√≠	Tramanda√≠
432162-Travesseiro	Travesseiro
432163-Tr√™s Arroios	Tr√™s Arroios
432166-Tr√™s Cachoeir	Tr√™s Cachoeiras
432170-Tr√™s Coroas	Tr√™s Coroas
432180-Tr√™s de Maio	Tr√™s de Maio
432185-Tr√™s Palmeira	Tr√™s Palmeiras
432190-Tr√™s Passos	Tr√™s Passos
432195-Trindade do S	Trindade do Sul
432200-Triunfo-Rs	Triunfo Rs
432225-Tupandi	Tupandi
432230-Tuparendi	Tuparendi
432240-Uruguaiana	Uruguaiana
432250-Vacaria	Vacaria
432253-Vale do Sol	Vale do Sol
432254-Vale Real	Vale Real
432260-Ven√¢ncio Aire	Ven√¢ncio Aires
432270-Vera Cruz-Rs	Vera Cruz Rs
432280-Veran√≥polis	Veran√≥polis
432285-Vespasiano Co	Vespasiano Corr√™a
432290-Viadutos	Viadutos
432300-Viam√£o	Viam√£o
432330-Vila Flores	Vila Flores
432340-Vila Maria	Vila Maria
432377-Westf√°lia	Westf√°lia
432380-Xangri-L√°	Xangri L√°
500020-√Ågua Clara	√Ågua Clara
500060-Amamba√≠	Amamba√≠
500070-Anast√°cio	Anast√°cio
500080-Anauril√¢ndia	Anauril√¢ndia
500085-Ang√©lica	Ang√©lica
500090-Ant√¥nio Jo√£o	Ant√¥nio Jo√£o
500100-Aparecida do	Aparecida do Taboado
500110-Aquidauana	Aquidauana
500124-Aral Moreira	Aral Moreira
500190-Bataguassu	Bataguassu
500200-Bataipor√£	Bataipor√£
500210-Bela Vista	Bela Vista
500215-Bodoquena	Bodoquena
500220-Bonito-Ms	Bonito Ms
500230-Brasil√¢ndia	Brasil√¢ndia
500240-Caarap√≥	Caarap√≥
500260-Camapu√£	Camapu√£
500270-Campo Grande-	Campo Grande
500290-Cassil√¢ndia	Cassil√¢ndia
500295-Chapad√£o do S	Chapad√£o do Sul
500320-Corumb√°	Corumb√°
500325-Costa Rica	Costa Rica
500330-Coxim	Coxim
500370-Dourados	Dourados
500375-Eldorado-Ms	Eldorado Ms
500380-F√°tima do Sul	F√°tima do Sul
500410-Guia Lopes da	Guia Lopes da Laguna
500440-Inoc√™ncia	Inoc√™ncia
500450-Itapor√£	Itapor√£
500460-Itaquira√≠	Itaquira√≠
500470-Ivinhema	Ivinhema
500490-Jaraguari	Jaraguari
500500-Jardim-Ms	Jardim Ms
500520-Lad√°rio	Lad√°rio
500540-Maracaju	Maracaju
500560-Miranda	Miranda
500568-Mundo Novo-Ms	Mundo Novo Ms
500570-Navira√≠	Navira√≠
500580-Nioaque	Nioaque
500600-Nova Alvorada	Nova Alvorada do Sul
500620-Nova Andradin	Nova Andradin
500625-Novo Horizont	Novo Horizonte
500630-Parana√≠ba	Parana√≠ba
500640-Pedro Gomes	Pedro Gomes
500660-Ponta Por√£	Ponta Por√£
500710-Ribas do Rio	Ribas do Rio Pardo
500720-Rio Brilhante	Rio Brilhante
500740-Rio Verde de	Rio Verde de Mato Grosso
500750-Rochedo	Rochedo
500755-Santa Rita do	Santa Rita do Sapuca√≠
500769-S√£o Gabriel d	S√£o Gabriel D
500790-Sidrol√¢ndia	Sidrol√¢ndia
500793-Sonora	Sonora
500795-Tacuru	Tacuru
500800-Terenos	Terenos
500830-Tr√™s Lagoas	Tr√™s Lagoas
510020-√Ågua Boa-Mt	√Ågua Boa Mt
510025-Alta Floresta	Alta Floresta
510035-Alto Boa Vist	Alto Boa Vista
510040-Alto Gar√ßas	Alto Gar√ßas
510060-Alto Taquari	Alto Taquari
510080-Apiac√°s	Apiac√°s
510125-Araputanga	Araputanga
510130-Aren√°polis	Aren√°polis
510140-Aripuan√£	Aripuan√£
510170-Barra do Bugr	Barra do Bugres
510180-Barra do Gar√ß	Barra do Gar√ßas
510185-Bom Jesus do	Bom Jesus do
510190-Brasnorte	Brasnorte
510250-C√°ceres	C√°ceres
510263-Campo Novo do	Campo Novo do Parecis
510267-Campo Verde	Campo Verde
510268-Campos de J√∫l	Campos de J√∫lio
510269-Canabrava do	Canabrava do
510270-Canarana-Mt	Canarana Mt
510300-Chapada dos G	Chapada dos Guimar√£es
510310-Cocalinho	Cocalinho
510320-Col√≠der	Col√≠der
510325-Colniza	Colniza
510330-Comodoro	Comodoro
510335-Confresa	Confresa
510337-Cotrigua√ßu	Cotrigua√ßu
510340-Cuiab√°	Cuiab√°
510345-Denise	Denise
510350-Diamantino	Diamantino
510360-Dom Aquino	Dom Aquino
510385-Ga√∫cha do Nor	Ga√∫cha do Norte
510410-Guarant√£ do N	Guarant√£ do Norte
510480-Jaciara	Jaciara
510490-Jangada	Jangada
510500-Jauru	Jauru
510510-Juara	Juara
510515-Ju√≠na	Ju√≠na
510517-Juruena	Juruena
510520-Juscimeira	Juscimeira
510525-Lucas do Rio	Lucas do Rio Verde
510550-Vila Bela da	Vila Bela da Sant√≠ssima Trindade
510558-Marcel√¢ndia	Marcel√¢ndia
510560-Matup√°	Matup√°
510562-Mirassol D'Oe	Mirassol d'Oeste
510590-Nobres	Nobres
510600-Nortel√¢ndia	Nortel√¢ndia
510610-Nossa Senhora	Nossa Senhora
510615-Nova Bandeira	Nova Bandeira
510618-Nova Lacerda	Nova Lacerda
510621-Nova Cana√£ do	Nova Cana√£ do Norte
510622-Nova Mutum	Nova Mutum
510623-Nova Ol√≠mpia-	Nova Ol√≠mpia
510624-Nova Ubirat√£	Nova Ubirat√£
510625-Nova Xavantin	Nova Xavantina
510626-Novo Mundo	Novo Mundo
510628-Novo S√£o Joaq	Novo S√£o Joaquim
510629-Parana√≠ta	Parana√≠ta
510630-Paranatinga	Paranatinga
510637-Pedra Preta-M	Pedra Preta M
510642-Peixoto de Az	Peixoto de Az
510645-Planalto da S	Planalto da Serra
510650-Pocon√©	Pocon√©
510665-Pontal do Ara	Pontal do Ara
510675-Pontes e Lace	Pontes e Lacerda
510677-Porto Alegre	Porto Alegre
510680-Porto dos Ga√∫	Porto dos Ga√∫chos
510700-Poxor√©o	Poxor√©o
510704-Primavera do	Primavera do Leste
510706-Quer√™ncia	Quer√™ncia
510710-S√£o Jos√© dos	S√£o Jos√© dos Campos
510730-S√£o Jos√© do R	S√£o Jos√© do Rio Preto
510735-S√£o Jos√© do X	S√£o Jos√© do Xingu
510760-Rondon√≥polis	Rondon√≥polis
510770-Ros√°rio Oeste	Ros√°rio Oeste
510776-Santa Rita do	Santa Rita do Sapuca√≠
510779-Santo Ant√¥nio	Santo Ant√¥nio de Jesus
510780-Santo Ant√¥nio	Santo Ant√¥nio de Jesus
510785-S√£o F√©lix do	S√£o F√©lix do Xingu
510787-Sapezal	Sapezal
510788-Serra Nova Do	Serra Nova Dourada
510790-Sinop	Sinop
510792-Sorriso	Sorriso
510794-Tabapor√£	Tabapor√£
510795-Tangar√° da Se	Tangar√° da Serra
510800-Tapurah	Tapurah
510805-Terra Nova do	Terra Nova do Norte
510840-V√°rzea Grande	V√°rzea Grande
510850-Vera	Vera
510860-Vila Rica	Vila Rica
510885-Nova Maril√¢nd	Nova Maril√¢ndia
510890-Nova Maring√°	Nova Maring√°
520005-Abadia de Goi	Abadia de Goi
520010-Abadi√¢nia	Abadi√¢nia
520013-Acre√∫na	Acre√∫na
520025-√Åguas Lindas	√Åguas Lindas
520030-Alex√¢nia	Alex√¢nia
520055-Alto Horizont	Alto Horizont
520110-An√°polis	An√°polis
520130-Anicuns	Anicuns
520140-Aparecida de	Aparecida de Goi√¢nia
520150-Apor√©	Apor√©
520180-Aragoi√¢nia	Aragoi√¢nia
520250-Aruan√£	Aruan√£
520280-Avelin√≥polis	Avelin√≥polis
520320-Barro Alto-Go	Barro Alto Go
520330-Bela Vista de	Bela Vista de Goi√°s
520350-Bom Jesus de	Bom Jesus de Goi√°s
520380-Brit√¢nia	Brit√¢nia
520390-Buriti Alegre	Buriti Alegre
520400-Cabeceiras	Cabeceiras
520410-Cachoeira Alt	Cachoeira Alt
520425-Cachoeira Dou	Cachoeira Dou
520430-Ca√ßu	Ca√ßu
520450-Caldas Novas	Caldas Novas
520485-Campo Limpo d	Campo Limpo de Goi√°s
520500-Carmo do Rio	Carmo do Rio Claro
520510-Catal√£o	Catal√£o
520520-Catura√≠	Catura√≠
520530-Cavalcante	Cavalcante
520540-Ceres	Ceres
520545-Cezarina	Cezarina
520547-Chapad√£o do C	Chapad√£o do C√©u
520549-Cidade Ociden	Cidade Ocidental
520551-Cocalzinho de	Cocalzinho de Goi√°s
520570-C√≥rrego do Ou	C√≥rrego do Ouro
520590-Corumba√≠ba	Corumba√≠ba
520620-Cristalina	Cristalina
520640-Crix√°s	Crix√°s
520725-Doverl√¢ndia	Doverl√¢ndia
520740-Ed√©ia	Ed√©ia
520750-Estrela do No	Estrela do Norte
520790-Flores de Goi	Flores de Goi√°s
520800-Formosa	Formosa
520840-Goian√°polis	Goian√°polis
520860-Goian√©sia	Goian√©sia
520870-Goi√¢nia	Goi√¢nia
520880-Goianira	Goianira
520890-Goi√°s	Goi√°s
520910-Goiatuba	Goiatuba
520970-Hidrol√¢ndia-G	Hidrol√¢ndia G
520995-Indiara	Indiara
521000-Inhumas	Inhumas
521010-Ipameri	Ipameri
521020-Ipor√°	Ipor√°
521040-Itabera√≠	Itabera√≠
521090-Itapaci	Itapaci
521140-Itau√ßu	Itau√ßu
521150-Itumbiara	Itumbiara
521170-Jandaia	Jandaia
521180-Jaragu√°	Jaragu√°
521190-Jata√≠	Jata√≠
521210-Jovi√¢nia	Jovi√¢nia
521220-Jussara-Go	Jussara Go
521230-Leopoldo de B	Leopoldo de Bulh√µes
521250-Luzi√¢nia	Luzi√¢nia
521270-Mamba√≠	Mamba√≠
521300-Mauril√¢ndia	Mauril√¢ndia
521308-Mina√ßu	Mina√ßu
521310-Mineiros	Mineiros
521370-Montes Claros	Montes Claros
521375-Montividiu	Montividiu
521380-Morrinhos-Go	Morrinhos Go
521380-Morrinhos-Go	Morrinhos Go
521400-Mozarl√¢ndia	Mozarl√¢ndia
521400-Mozarl√¢ndia	Mozarl√¢ndia
521440-Naz√°rio	Naz√°rio
521450-Ner√≥polis	Ner√≥polis
521460-Niquel√¢ndia	Niquel√¢ndia
521500-Nova Veneza-G	Nova Veneza G
521523-Novo Gama	Novo Gama
521530-Orizona	Orizona
521540-Ouro Verde de	Ouro Verde de
521550-Ouvidor	Ouvidor
521560-Padre Bernard	Padre Bernard
521570-Palmeiras de	Palmeiras de Goi√°s
521630-Paranaiguara	Paranaiguara
521640-Para√∫na	Para√∫na
521645-Perol√¢ndia	Perol√¢ndia
521680-Petrolina de	Petrolina de Goi√°s
521710-Piracanjuba	Piracanjuba
521730-Piren√≥polis	Piren√≥polis
521740-Pires do Rio	Pires do Rio
521760-Planaltina	Planaltina
521770-Pontalina	Pontalina
521800-Porangatu	Porangatu
521830-Posse	Posse
521839-Professor Jam	Professor Jamil
521850-Quirin√≥polis	Quirin√≥polis
521860-Rialma	Rialma
521878-Rio Quente	Rio Quente
521880-Rio Verde	Rio Verde
521890-Rubiataba	Rubiataba
521910-Santa B√°rbara	Santa B√°rbara d'Oeste
521925-Santa F√© de G	Santa F√© de Goi√°s
521930-Santa Helena	Santa Helena
521945-Santa Rita do	Santa Rita do Sapuca√≠
521970-Santa Terezin	Santa Terezinha de Itaipu
521971-Santo Ant√¥nio	Santo Ant√¥nio de Jesus
521973-Santo Ant√¥nio	Santo Ant√¥nio de Jesus
521975-Santo Ant√¥nio	Santo Ant√¥nio de Jesus
521980-S√£o Domingos-	S√£o Domingos
522010-S√£o Lu√≠s de M	S√£o Lu√≠s de Montes Belos
522020-S√£o Miguel do	S√£o Miguel do Araguaia
522026-S√£o Miguel do	S√£o Miguel do Araguaia
522040-S√£o Sim√£o-Go	S√£o Sim√£o Go
522045-Senador Caned	Senador Canedo
522050-Serran√≥polis	Serran√≥polis
522060-Silv√¢nia	Silv√¢nia
522068-Simol√¢ndia	Simol√¢ndia
522140-Trindade-Go	Trindade Go
522155-Turvel√¢ndia	Turvel√¢ndia
522160-Urua√ßu	Urua√ßu
522170-Uruana	Uruana
522180-Uruta√≠	Uruta√≠
522185-Valpara√≠so de	Valpara√≠so de Goi√°s
522200-Vian√≥polis	Vian√≥polis
522205-Vicentin√≥poli	Vicentin√≥poli
522220-Vila Boa	Vila Boa
522230-Vila Prop√≠cio	Vila Prop√≠cio
530010-Bras√≠lia	Bras√≠lia"""

    
    mapping = {}
    lines = mapping_data.strip().split('\n')
    for line in lines:
        parts = line.split('\t')
        if len(parts) == 2:
            mapping[parts[0]] = parts[1]
    
    # Salva no arquivo
    with open("municipio_mapping.txt", "w", encoding="utf-8") as f:
        for key, value in mapping.items():
            f.write(f"{key}\t{value}\n")
    
    print(f"‚úÖ Mapeamento de munic√≠pios criado com {len(mapping)} entradas")
    return mapping

def load_municipio_mapping() -> Dict[str, str]:
    """Carrega o mapeamento de munic√≠pio do arquivo gerado."""
    mapping = {}
    try:
        # Tenta carregar o arquivo gerado
        with open("municipio_mapping.txt", "r", encoding="utf-8") as f:
            for line in f:
                parts = line.strip().split('\t')
                if len(parts) == 2:
                    mapping[parts[0]] = parts[1]
        print(f"‚úÖ Mapeamento de munic√≠pios carregado: {len(mapping)} entradas")
    except FileNotFoundError:
        st.warning("Arquivo 'municipio_mapping.txt' n√£o encontrado. Criando mapeamento...")
        mapping = create_municipio_mapping_file()
    return mapping

# --------------- Mapeamento DIN√ÇMICO ---------------
def detect_and_map_columns(df: pd.DataFrame) -> dict:
    """
    Detecta automaticamente as colunas baseado nos nomes normalizados
    e retorna um mapeamento para os nomes padr√£o
    """
    col_mapping = {}
    # Normaliza os nomes das colunas do DataFrame para facilitar a compara√ß√£o
    normalized_cols = {normalize_name(col): col for col in df.columns}
    
    # Mapeamento de padr√µes para nossas colunas padr√£o - EXPANDIDO
    patterns = {
        'data': ['data_acidente', 'data', 'dt_acidente', 'dataacidente', 'data_acidente_1', 'datadoacidente'],
        'uf': ['uf_munic_acidente', 'uf', 'uf_municipio', 'uf_acidente', 'uf_munic_empregador', 'ufmunicempregador'],
        'setor': ['cnae2_0_empregador_1', 'setor', 'cnae_descricao', 'atividade', 'empregador', 'cnae20empregador1'],
        'cnae_codigo': ['cnae2_0_empregador', 'cnae', 'cnae_codigo', 'codigo_cnae', 'cnae20empregador'],
        'lesao': ['natureza_da_lesao', 'lesao', 'natureza_lesao', 'tipo_lesao', 'naturezalesao'],
        'origem': ['agente_causador_acidente', 'origem', 'agente_causador', 'causa', 'agentecausadoracidente'],
        'tipo_acidente': ['tipo_do_acidente', 'tipo_acidente', 'acidente_tipo', 'tipodoacidente'],
        'municipio': ['municipio', 'munic', 'municipio_acidente', 'munic_empr', 'municempr'],
        'munic_empr': ['munic_empr', 'municipio_empregador', 'municempregador', 'munic_empregador'],
        'uf_munic_empregador': ['uf_munic_empregador', 'ufempregador', 'uf_municipio_empregador', 'ufmunicempregador']
    }
    
    # Para debug: mostrar colunas normalizadas dispon√≠veis
    st.write("üîç Colunas normalizadas dispon√≠veis:", list(normalized_cols.keys()))
    
    # Busca por correspond√™ncias
    for standard_name, possible_names in patterns.items():
        found = False
        # Primeiro, verifica correspond√™ncias exatas
        for norm_name in possible_names:
            if norm_name in normalized_cols:
                col_mapping[standard_name] = normalized_cols[norm_name]
                st.write(f"‚úÖ Mapeado: {standard_name} ‚Üê {normalized_cols[norm_name]} (correspond√™ncia exata)")
                found = True
                break
        
        # Se n√£o encontrou correspond√™ncia exata, busca por padr√µes parciais
        if not found:
            for original_col, normalized_col in normalized_cols.items():
                for pattern in possible_names:
                    if pattern in normalized_col:
                        col_mapping[standard_name] = original_col
                        st.write(f"üîÑ Mapeado: {standard_name} ‚Üê {original_col} (correspond√™ncia parcial: '{pattern}' em '{normalized_col}')")
                        found = True
                        break
                if found:
                    break
    
    return col_mapping

def apply_uf_and_municipio_mapping(df: pd.DataFrame) -> pd.DataFrame:
    """Aplica os mapeamentos de UF e Munic√≠pio do Empregador."""
    
    # Mapeamento de UF (UF Munic. Empregador -> Novo_Nome_UF Munic. Empregador)
    if 'uf_munic_empregador' in df.columns:
        st.write("Aplicando mapeamento de UF...")
        
        # Primeiro, normalizar os dados de UF
        df['uf_munic_empregador_normalized'] = df['uf_munic_empregador'].astype(str).apply(
            lambda x: _strip_accents(x).strip().title() if pd.notna(x) else x
        )
        
        # Aplicar o mapeamento
        df['uf_empregador_sigla'] = df['uf_munic_empregador_normalized'].map(UF_MAPPING)
        
        # Para debug: mostrar valores √∫nicos antes e depois
        st.write("Valores √∫nicos em uf_munic_empregador:", df['uf_munic_empregador'].unique()[:10])
        st.write("Valores √∫nicos em uf_munic_empregador_normalized:", df['uf_munic_empregador_normalized'].unique()[:10])
        st.write("Valores √∫nicos em uf_empregador_sigla:", df['uf_empregador_sigla'].unique()[:10])
        
        # Contar quantos foram mapeados
        total_uf = len(df)
        mapeados_uf = df['uf_empregador_sigla'].notna().sum()
        st.write(f"UFs mapeadas: {mapeados_uf}/{total_uf} ({mapeados_uf/total_uf*100:.1f}%)")
        
        # Preencher os n√£o mapeados com o valor original
        df['uf_empregador_sigla'] = df['uf_empregador_sigla'].fillna(df['uf_munic_empregador'])
    
    # Mapeamento de Munic√≠pio (Munic Empr -> Municipio_Novo)
    municipio_mapping = load_municipio_mapping()
    if municipio_mapping:
        # Tenta diferentes nomes de coluna para munic√≠pio
        municipio_cols = ['munic_empr', 'municipio_empregador', 'munic_empregador']
        municipio_col_found = None
        
        for col in municipio_cols:
            if col in df.columns:
                municipio_col_found = col
                break
        
        if municipio_col_found:
            st.write(f"Aplicando mapeamento de munic√≠pio na coluna: {municipio_col_found}")
            
            # Normalizar a coluna de munic√≠pio antes do mapeamento
            df['municipio_empregador_novo'] = df[municipio_col_found].map(municipio_mapping)
            
            # Conta quantos foram mapeados
            total_munic = len(df)
            mapeados_munic = df['municipio_empregador_novo'].notna().sum()
            st.write(f"Munic√≠pios mapeados: {mapeados_munic}/{total_munic} ({mapeados_munic/total_munic*100:.1f}%)")
            
            # Preenche os n√£o mapeados com o valor original
            df['municipio_empregador_novo'] = df['municipio_empregador_novo'].fillna(df[municipio_col_found])
        else:
            st.error("‚ùå Nenhuma coluna de munic√≠pio do empregador encontrada")
            st.write("Colunas dispon√≠veis:", [col for col in df.columns if 'munic' in col.lower()])
    else:
        st.error("‚ùå Mapeamento de munic√≠pios n√£o carregado")
        
    return df

def check_uf_mapping(df: pd.DataFrame):
    """Verifica e mostra estat√≠sticas do mapeamento de UF"""
    if 'uf_munic_empregador' in df.columns and 'uf_empregador_sigla' in df.columns:
        st.subheader("üîç Verifica√ß√£o do Mapeamento de UF")
        
        # Mostrar valores √∫nicos e contagens
        uf_counts = df['uf_munic_empregador'].value_counts().head(20)
        uf_sigla_counts = df['uf_empregador_sigla'].value_counts().head(20)
        
        col1, col2 = st.columns(2)
        with col1:
            st.write("Top 20 UFs Originais:")
            st.dataframe(uf_counts)
        with col2:
            st.write("Top 20 UFs Mapeadas:")
            st.dataframe(uf_sigla_counts)
        
        # Verificar especificamente o Paran√°
        parana_original = df[df['uf_munic_empregador'].str.contains('paran', case=False, na=False)]
        parana_mapeado = df[df['uf_empregador_sigla'] == 'PR']
        
        st.write(f"Registros com 'Paran' no nome original: {len(parana_original)}")
        st.write(f"Registros mapeados como PR: {len(parana_mapeado)}")
        
        if len(parana_original) > 0 and len(parana_mapeado) > 0:
            st.success("‚úÖ Paran√° detectado e mapeado corretamente!")
        elif len(parana_original) > 0 and len(parana_mapeado) == 0:
            st.error("‚ùå Paran√° detectado mas N√ÉO mapeado!")
            st.write("Valores originais do Paran√°:", parana_original['uf_munic_empregador'].unique())

# --------------- UF/Regi√£o helpers ---------------
UF_SIGLAS = {
    "acre":"AC","alagoas":"AL","amapa":"AP","amazonas":"AM","bahia":"BA",
    "ceara":"CE","distrito federal":"DF","espirito santo":"ES","goias":"GO",
    "maranhao":"MA","mato grosso":"MT","mato grosso do sul":"MS",
    "minas gerais":"MG","para":"PA","paraiba":"PB","parana":"PR",
    "pernambuco":"PE","piaui":"PI","rio de janeiro":"RJ",
    "rio grande do norte":"RN","rio grande do sul":"RS",
    "rondonia":"RO","roraima":"RR","santa catarina":"SC",
    "sao paulo":"SP","sergipe":"SE","tocantins":"TO"
}
UF_REGIAO = {
    "AC":"Norte","AP":"Norte","AM":"Norte","PA":"Norte","RO":"Norte","RR":"Norte","TO":"Norte",
    "AL":"Nordeste","BA":"Nordeste","CE":"Nordeste","MA":"Nordeste","PB":"Nordeste","PE":"Nordeste","PI":"Nordeste","RN":"Nordeste","SE":"Nordeste",
    "DF":"Centro-Oeste","GO":"Centro-Oeste","MT":"Centro-Oeste","MS":"Centro-Oeste",
    "ES":"Sudeste","MG":"Sudeste","RJ":"Sudeste","SP":"Sudeste",
    "PR":"Sul","RS":"Sul","SC":"Sul"
}
def normalize_uf_name(x: str) -> str:
    x = _strip_accents(str(x)).strip().lower()
    x = re.sub(r'\s+', ' ', x)
    return x
def derive_sigla_from_name(x: str) -> Optional[str]:
    if x is None or (isinstance(x, float) and np.isnan(x)):
        return None
    s = str(x).strip()
    if re.fullmatch(r'[A-Za-z]{2}', s):
        return s.upper()
    key = normalize_uf_name(s)
    return UF_SIGLAS.get(key)
def derive_regiao_from_sigla(sigla: Optional[str]) -> Optional[str]:
    if not sigla:
        return None
    return UF_REGIAO.get(sigla.upper())

# --------------- UI / Fonte ---------------
st.title("Observat√≥rio ‚Äî CSV (Agrega√ß√£o de M√∫ltiplos Arquivos)")

# --- CORRE√á√ÉO 1: Usar st.session_state para manter o DataFrame em cache ---
if 'df_full' not in st.session_state:
    st.session_state.df_full = None
if 'df_filtered' not in st.session_state:
    st.session_state.df_filtered = None

with st.sidebar:
    st.header("Fonte dos Dados")
    mode = st.radio("Como fornecer os arquivos?", ["Pasta com m√∫ltiplos CSVs", "Carregar arquivo √∫nico"], index=1, key="load_mode")
    
    folder_path = None
    upload = None

    if mode == "Pasta com m√∫ltiplos CSVs":
        folder_path = st.text_input("Caminho da pasta com CSVs", value="C:/Users/Gabriel/Documents/CSVs", key="folder_path")
        st.info("üí° Coloque todos os CSVs na mesma pasta")
    else:
        upload = st.file_uploader("Envie seu .csv", type=["csv"], key="file_uploader")

    with st.expander("Op√ß√µes avan√ßadas (se precisar)"):
        sep_label = st.selectbox("Delimitador", ["Autom√°tico", ";", ",", "\\t", "|"], index=0, key="sep_label")
        sep_opt = None if sep_label == "Autom√°tico" else ("\t" if sep_label == "\\t" else sep_label)
        decimal_opt = st.selectbox("Separador decimal", [",", "."], index=0, key="decimal_opt")
        skiprows = st.number_input("Pular linhas iniciais", min_value=0, max_value=500, value=0, step=1, key="skiprows")
        enc_first = st.selectbox("Encoding preferido", ["latin1 (BR)", "utf-8-sig", "utf-8", "cp1252"], index=0, key="enc_first")
        enc_order = [enc_first.split(" ")[0]] + [e for e in ENCODINGS_BR if e != enc_first.split(" ")[0]]
    
    # Bot√£o para criar/carregar mapeamento
    if st.button("üîÑ Criar/Carregar Mapeamento de Munic√≠pios"):
        create_municipio_mapping_file()
        st.success("Mapeamento de munic√≠pios criado/carregado com sucesso!")
    
    # --- CORRE√á√ÉO 2: Usar um callback para limpar o cache se o bot√£o for clicado ---
    def clear_cache():
        st.session_state.df_full = None
        st.session_state.df_filtered = None

    run = st.button("Carregar dados", on_click=clear_cache)

# --------------- Carregar & preparar ---------------
if st.session_state.df_full is None:
    if not run and upload is None:
        st.info("üëà Selecione a pasta com CSVs ou carregue um arquivo, depois clique em **Carregar dados**.")
        st.stop()

    try:
        if mode == "Pasta com m√∫ltiplos CSVs":
            if not folder_path or not os.path.exists(folder_path):
                st.error(f"Pasta n√£o encontrada: {folder_path}")
                st.stop()
            
            df_raw = load_all_csvs_from_folder(
                folder_path, sep_opt=sep_opt, decimal_opt=decimal_opt,
                skiprows=skiprows, encodings=enc_order
            )
            st.success(f"‚úÖ Dados agregados carregados com sucesso! Total: {df_raw.shape[0]:,} registros")
            
        else:  # Modo arquivo √∫nico
            if upload is None:
                st.error("Selecione um arquivo CSV para carregar.")
                st.stop()
            
            df_raw, enc_used, sep_used = load_csv_simple(
                upload, sep_opt=sep_opt, decimal_opt=decimal_opt,
                skiprows=skiprows, encodings=enc_order
            )
            st.success(f"CSV carregado. **Encoding:** {enc_used} | **Separador:** {repr(sep_used)} | Linhas: {df_raw.shape[0]:,} | Colunas: {df_raw.shape[1]}")
            
    except Exception as e:
        st.error(f"N√£o consegui ler os dados: {e}")
        st.stop()

    # normaliza√ß√£o + remo√ß√£o de duplicadas
    df = normalize_headers(df_raw)
    df = ensure_unique_columns(df)
    
    # Mostrar colunas dispon√≠veis para debug
    with st.expander("üîç Colunas dispon√≠veis (ap√≥s normaliza√ß√£o)"):
        st.write("Colunas encontradas:", list(df.columns))
    
    # Detectar e mapear colunas automaticamente
    col_mapping = detect_and_map_columns(df)
    
    st.subheader("üîß Mapeamento de Colunas Detectado")
    st.write("O sistema detectou automaticamente estas correspond√™ncias:")
    for std_name, orig_name in col_mapping.items():
        st.write(f"‚Ä¢ **{std_name}** ‚Üê {orig_name}")
    
    # Verificar se temos as colunas m√≠nimas necess√°rias
    required_cols = ['data', 'uf', 'setor', 'lesao', 'origem', 'tipo_acidente']
    missing_required = [col for col in required_cols if col not in col_mapping]
    
    if missing_required:
        st.warning(f"‚ö†Ô∏è Algumas colunas importantes n√£o foram detectadas: {missing_required}")
        st.info("Vou tentar usar colunas alternativas...")
    
    # Aplicar o mapeamento - renomear apenas as colunas detectadas
    df_renamed = df.copy()
    for std_name, orig_name in col_mapping.items():
        df_renamed[std_name] = df[orig_name]
    
    # limpa espa√ßos
    for c in df_renamed.select_dtypes(include=['object']).columns:
        df_renamed[c] = df_renamed[c].astype(str).str.strip()
    
    # datas derivadas
    ensure_datetime(df_renamed, "data")
    if "data" in df_renamed:
        df_renamed["ano"] = df_renamed["data"].dt.year
        df_renamed["mes"] = df_renamed["data"].dt.to_period("M").astype(str)
    
    # uf/regi√£o
    if "uf" in df_renamed:
        df_renamed["uf_sigla"] = df_renamed["uf"].apply(derive_sigla_from_name)
        df_renamed["regiao"] = df_renamed["uf_sigla"].apply(derive_regiao_from_sigla)
        
    # Aplica os mapeamentos de UF e Munic√≠pio do Empregador
    df_renamed = apply_uf_and_municipio_mapping(df_renamed)

    # VERIFICA√á√ÉO ESPEC√çFICA DO MAPEAMENTO
    check_uf_mapping(df_renamed)

    # Debug: mostrar primeiras linhas das colunas mapeadas
    st.subheader("üîç Debug - Verifica√ß√£o do Mapeamento")
    if 'munic_empr' in df_renamed.columns:
        st.write("Amostra de dados de Munic Empr (original):")
        st.write(df_renamed['munic_empr'].head(10))
    if 'municipio_empregador_novo' in df_renamed.columns:
        st.write("Amostra de dados de municipio_empregador_novo (mapeado):")
        st.write(df_renamed['municipio_empregador_novo'].head(10))
    if 'uf_munic_empregador' in df_renamed.columns:
        st.write("Amostra de dados de UF Munic. Empregador (original):")
        st.write(df_renamed['uf_munic_empregador'].head(10))
    if 'uf_empregador_sigla' in df_renamed.columns:
        st.write("Amostra de dados de uf_empregador_sigla (mapeado):")
        st.write(df_renamed['uf_empregador_sigla'].head(10))

    # Armazena o DataFrame completo processado no session_state
    st.session_state.df_full = df_renamed
    st.session_state.df_filtered = df_renamed.copy()

# Se o DataFrame j√° estiver em cache, recupera
df_renamed = st.session_state.df_full

# --------------- Filtros globais ---------------
st.header("Filtros globais")
df_f = df_renamed.copy()

# Criar colunas para os filtros
col1, col2, col3, col4, col5, col6 = st.columns(6)

# Filtro por UF (se dispon√≠vel)
if "uf_sigla" in df_f:
    ufs = sorted([u for u in df_f["uf_sigla"].dropna().unique().tolist() if u])
    uf_sel = col1.multiselect("UF (sigla)", ufs, default=[], key="uf_filter")
    if uf_sel:
        df_f = df_f[df_f["uf_sigla"].isin(uf_sel)]

# Filtro por Regi√£o (se dispon√≠vel)
if "regiao" in df_f:
    regioes = sorted([r for r in df_f["regiao"].dropna().unique().tolist() if r])
    reg_sel = col2.multiselect("Regi√£o", regioes, default=[], key="regiao_filter")
    if reg_sel:
        df_f = df_f[df_f["regiao"].isin(reg_sel)]

# Filtro por M√™s (se dispon√≠vel)
if "mes" in df_f:
    meses = sorted(df_f["mes"].dropna().unique().tolist())
    mes_sel = col3.selectbox("M√™s (YYYY-MM)", ["(todos)"] + meses, index=0, key="mes_filter")
    if mes_sel != "(todos)":
        df_f = df_f[df_f["mes"] == mes_sel]

# Filtro por Ano (se dispon√≠vel)
if "ano" in df_f:
    anos = sorted(df_f["ano"].dropna().unique().tolist())
    ano_sel = col4.selectbox("Ano", ["(todos)"] + anos, index=0, key="ano_filter")
    if ano_sel != "(todos)":
        df_f = df_f[df_f["ano"] == ano_sel]

# Filtro por Tipo de Acidente (se dispon√≠vel)
if "tipo_acidente" in df_f:
    tipo_opts = sorted(df_f["tipo_acidente"].dropna().astype(str).unique().tolist())
    tipo_sel = col5.multiselect("Tipo de acidente", tipo_opts, default=[], key="tipo_acidente_filter")
    if tipo_sel:
        df_f = df_f[df_f["tipo_acidente"].astype(str).isin(tipo_sel)]

# Filtro por CNAE (c√≥digo) (se dispon√≠vel)
if "cnae_codigo" in df_f:
    cnae_codigos = sorted([c for c in df_f["cnae_codigo"].dropna().unique().tolist() if c])
    cnae_sel = col6.multiselect("CNAE (c√≥digo)", cnae_codigos, default=[], key="cnae_codigo_filter")
    if cnae_sel:
        df_f = df_f[df_f["cnae_codigo"].astype(str).isin(cnae_sel)]

# Filtro adicional por descri√ß√£o do CNAE (se dispon√≠vel)
if "setor" in df_f:
    cnae_descricoes = sorted([d for d in df_f["setor"].dropna().unique().tolist() if d])
    cnae_desc_sel = st.multiselect("CNAE (setor/atividade)", cnae_descricoes, default=[], key="cnae_desc_filter")
    if cnae_desc_sel:
        df_f = df_f[df_f["setor"].astype(str).isin(cnae_desc_sel)]

# Filtro por arquivo de origem (se aplic√°vel)
if 'arquivo_origem' in df_f.columns:
    arquivos = sorted(df_f['arquivo_origem'].unique().tolist())
    arquivo_sel = st.multiselect("Filtrar por arquivo de origem", arquivos, default=[], key="arquivo_origem_filter")
    if arquivo_sel:
        df_f = df_f[df_f['arquivo_origem'].isin(arquivo_sel)]

with st.expander("üîé Filtro por termo (texto livre)"):
    termo = st.text_input("Digite um termo para filtrar (procura em colunas de texto). Deixe vazio para ignorar.", key="termo_filter")
    if termo:
        termo_lower = termo.lower()
        text_cols = [c for c in df_f.columns if df_f[c].dtype == "object"]
        mask = pd.Series(False, index=df_f.index)
        for c in text_cols:
            mask = mask | df_f[c].astype(str).str.lower().str.contains(termo_lower, na=False)
        df_f = df_f[mask]

# Atualiza o DataFrame filtrado no session_state
st.session_state.df_filtered = df_f

# --------------- Abas / Dashboards ---------------
df_display = st.session_state.df_filtered

tab_names = ["üìä Vis√£o geral", "‚è± S√©rie temporal", "üó∫Ô∏è UF/Regi√£o", "üè≠ Setor/CNAE", "ü©π Tipo de Les√£o", "‚öôÔ∏è Origem/Causa", "üìã Dados + Download"]

# Filtrar abas baseado nas colunas dispon√≠veis
available_tabs = []
if any(col in df_display.columns for col in ['mes', 'ano', 'uf_sigla', 'setor', 'lesao', 'origem', 'tipo_acidente']):
    available_tabs = tab_names
else:
    available_tabs = ["üìã Dados + Download"]

tabs = st.tabs(available_tabs)

# Vis√£o geral
if "üìä Vis√£o geral" in available_tabs:
    with tabs[available_tabs.index("üìä Vis√£o geral")]:
        st.subheader("Vis√£o geral (dados filtrados)")
        k1, k2, k3, k4, k5 = st.columns(5)
        total = df_display.shape[0]
        with k1: st.metric("Registros", f"{total:,}")
        
        if 'arquivo_origem' in df_display.columns:
            with k2: st.metric("Arquivos", f"{df_display['arquivo_origem'].nunique():,}")

        if "mes" in df_display and df_display["mes"].notna().any():
            serie = df_display.groupby("mes").size().sort_index()
            if len(serie) > 0:
                ultimo = int(serie.iloc[-1])
                delta = int(ultimo - (serie.iloc[-2] if len(serie) > 1 else 0))
                with k3: st.metric("√öltimo m√™s (qtd.)", f"{ultimo:,}", delta=f"{delta:+,}")
            else:
                with k3: st.metric("√öltimo m√™s (qtd.)", "‚Äî")
        else:
            with k3: st.metric("√öltimo m√™s (qtd.)", "‚Äî")

        if "uf_sigla" in df_display:
            with k4: st.metric("UFs cobertas", f"{df_display['uf_sigla'].nunique():,}")
        else:
            with k4: st.metric("UFs cobertas", "‚Äî")

        if "setor" in df_display:
            with k5: st.metric("Setores/Atividades", f"{df_display['setor'].nunique():,}")
        else:
            with k5: st.metric("Setores/Atividades", "‚Äî")

        st.markdown("---")
        cA, cB = st.columns([2, 1])
        with cA:
            if "mes" in df_display and df_display["mes"].notna().any():
                st.caption("Registros por m√™s")
                monthly_data = df_display.groupby("mes").size().sort_index()
                if len(monthly_data) > 0:
                    st.line_chart(monthly_data)
                else:
                    st.info("N√£o h√° dados para mostrar o gr√°fico mensal.")
            else:
                st.info("N√£o h√° coluna de m√™s derivada.")
        with cB:
            top_n = st.number_input("Top N (rankings)", min_value=5, max_value=50, value=10, step=1, key="top_n_geral")
            if "uf_sigla" in df_display:
                st.caption(f"Top {top_n} ‚Äî UF")
                uf_counts = df_display["uf_sigla"].value_counts().head(top_n)
                if len(uf_counts) > 0:
                    st.bar_chart(uf_counts)
            if "setor" in df_display:
                st.caption(f"Top {top_n} ‚Äî Setor/Atividade")
                setor_counts = df_display["setor"].astype(str).value_counts().head(top_n)
                if len(setor_counts) > 0:
                    st.bar_chart(setor_counts)

# S√©rie temporal
if "‚è± S√©rie temporal" in available_tabs:
    with tabs[available_tabs.index("‚è± S√©rie temporal")]:
        st.subheader("Evolu√ß√£o Temporal dos Acidentes")
        
        if "data" in df_display:
            # Agrupamento por ano/m√™s para a s√©rie temporal
            df_time = df_display.copy()
            df_time['ano_mes'] = df_time['data'].dt.to_period('M')
            
            # Contagem de acidentes por ano/m√™s
            monthly_counts = df_time.groupby('ano_mes').size().rename('Total de Acidentes')
            monthly_counts.index = monthly_counts.index.astype(str)
            
            st.caption("Total de Acidentes por M√™s")
            st.line_chart(monthly_counts)
            
            # Agrupamento por ano para consolida√ß√£o anual
            df_time['ano'] = df_time['data'].dt.year
            yearly_counts = df_time.groupby('ano').size().rename('Total de Acidentes')
            
            st.caption("Total de Acidentes por Ano (Consolida√ß√£o)")
            st.bar_chart(yearly_counts)
            
            # Tabela de dados
            st.markdown("---")
            st.caption("Dados Mensais")
            st.dataframe(monthly_counts.reset_index(), use_container_width=True)
            st.caption("Dados Anuais")
            st.dataframe(yearly_counts.reset_index(), use_container_width=True)
            
        else:
            st.warning("A coluna de data ('data') n√£o foi mapeada corretamente ou est√° ausente no dataset filtrado.")

# UF/Regi√£o
if "üó∫Ô∏è UF/Regi√£o" in available_tabs:
    with tabs[available_tabs.index("üó∫Ô∏è UF/Regi√£o")]:
        st.subheader("Distribui√ß√£o por UF e Regi√£o")
        
        if "regiao" in df_display:
            st.caption("Acidentes por Regi√£o")
            regiao_counts = df_display["regiao"].value_counts()
            st.bar_chart(regiao_counts)
            
            st.caption("Acidentes por UF")
            uf_counts = df_display["uf_sigla"].value_counts()
            st.bar_chart(uf_counts)
            
            st.markdown("---")
            st.caption("Tabela de Distribui√ß√£o")
            
            # Tabela de contagem por UF e Regi√£o
            uf_regiao_counts = df_display.groupby(['regiao', 'uf_sigla']).size().reset_index(name='Total de Acidentes')
            st.dataframe(uf_regiao_counts, use_container_width=True)
        else:
            st.warning("As colunas 'uf_sigla' ou 'regiao' n√£o foram mapeadas corretamente ou est√£o ausentes.")

# Setor/CNAE
if "üè≠ Setor/CNAE" in available_tabs:
    with tabs[available_tabs.index("üè≠ Setor/CNAE")]:
        st.subheader("Distribui√ß√£o por Setor de Atividade (CNAE)")
        
        if "setor" in df_display:
            top_n_setor = st.number_input("Top N Setores", min_value=5, max_value=50, value=15, step=1, key="top_n_setor")
            
            setor_counts = df_display["setor"].astype(str).value_counts().head(top_n_setor)
            
            st.caption(f"Top {top_n_setor} Setores/Atividades com mais acidentes")
            st.bar_chart(setor_counts)
            
            st.markdown("---")
            st.caption("Tabela de Contagem por Setor (Top 50)")
            st.dataframe(df_display["setor"].astype(str).value_counts().head(50), use_container_width=True)
        else:
            st.warning("A coluna 'setor' n√£o foi mapeada corretamente ou est√° ausente.")

# Tipo de Les√£o
if "ü©π Tipo de Les√£o" in available_tabs:
    with tabs[available_tabs.index("ü©π Tipo de Les√£o")]:
        st.subheader("Distribui√ß√£o por Tipo de Les√£o")
        
        if "lesao" in df_display:
            lesao_counts = df_display["lesao"].value_counts()
            
            st.caption("Contagem de acidentes por Natureza da Les√£o")
            st.bar_chart(lesao_counts)
            
            st.markdown("---")
            st.caption("Tabela de Contagem por Les√£o")
            st.dataframe(lesao_counts, use_container_width=True)
        else:
            st.warning("A coluna 'lesao' n√£o foi mapeada corretamente ou est√° ausente.")

# Origem/Causa
if "‚öôÔ∏è Origem/Causa" in available_tabs:
    with tabs[available_tabs.index("‚öôÔ∏è Origem/Causa")]:
        st.subheader("Distribui√ß√£o por Agente Causador (Origem)")
        
        if "origem" in df_display:
            top_n_origem = st.number_input("Top N Agentes Causadores", min_value=5, max_value=50, value=15, step=1, key="top_n_origem")
            
            origem_counts = df_display["origem"].value_counts().head(top_n_origem)
            
            st.caption(f"Top {top_n_origem} Agentes Causadores de Acidentes")
            st.bar_chart(origem_counts)
            
            st.markdown("---")
            st.caption("Tabela de Contagem por Agente Causador (Top 50)")
            st.dataframe(df_display["origem"].value_counts().head(50), use_container_width=True)
        else:
            st.warning("A coluna 'origem' n√£o foi mapeada corretamente ou est√° ausente.")

# Dados + Download
if "üìã Dados + Download" in available_tabs:
    with tabs[available_tabs.index("üìã Dados + Download")]:
        st.subheader("Dados brutos (ap√≥s filtros)")
        st.write(f"Mostrando {df_display.shape[0]:,} registros.")
        st.dataframe(df_display, use_container_width=True)
        
        # Op√ß√µes de download
        col1, col2 = st.columns(2)
        with col1:
            st.download_button("‚¨áÔ∏è Baixar CSV filtrado",
                            data=df_display.to_csv(index=False).encode("utf-8-sig"),
                            file_name="dados_filtrados.csv", mime="text/csv")
        with col2:
            st.download_button("‚¨áÔ∏è Baixar dados completos (todos os CSVs)",
                            data=df_renamed.to_csv(index=False).encode("utf-8-sig"),
                            file_name="dados_completos_agregados.csv", mime="text/csv")

# Perfil opcional
with st.expander("üß≠ Perfil do dataset"):
    n_rows, n_cols = df_renamed.shape
    st.caption(f"**Linhas:** {n_rows:,} | **Colunas:** {n_cols}")
    profile = pd.DataFrame({
        "coluna": df_renamed.columns,
        "dtype": [str(t) for t in df_renamed.dtypes.values],
        "n_nulos": [int(df_renamed[c].isna().sum()) for c in df_renamed.columns],
        "%_nulos": [round(df_renamed[c].isna().mean()*100, 2) for c in df_renamed.columns],
        "n_unicos": [int(df_renamed[c].nunique(dropna=True)) for c in df_renamed.columns],
    })
    st.dataframe(profile, use_container_width=True)